   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0_hal_lowlevel.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_GetTick,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_GetTick
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_GetTick:
  25              	.LFB37:
  26              		.file 1 ".././hal/stm32f0/stm32f0_hal_lowlevel.c"
   1:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    
   6:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */
   8:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
   9:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /*
  10:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  12:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  23:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  34:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */ 
  36:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  37:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  38:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal.h"
  39:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal_lowlevel.h"
  40:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_rcc.h"
  41:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_gpio.h"
  42:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_dma.h"
  43:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_uart.h"
  44:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_flash.h"
  45:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  46:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  47:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  49:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  27              		.loc 1 49 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	static uint32_t tick;
  32              		.loc 1 50 2 view .LVU1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  33              		.loc 1 51 2 view .LVU2
  34              		.loc 1 51 13 is_stmt 0 view .LVU3
  35 0000 024B     		ldr	r3, .L2
  52:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  36              		.loc 1 52 1 view .LVU4
  37              		@ sp needed
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  38              		.loc 1 51 13 view .LVU5
  39 0002 1868     		ldr	r0, [r3]
  40 0004 421C     		adds	r2, r0, #1
  41 0006 1A60     		str	r2, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  42              		.loc 1 51 16 is_stmt 1 view .LVU6
  43              		.loc 1 52 1 is_stmt 0 view .LVU7
  44 0008 7047     		bx	lr
  45              	.L3:
  46 000a C046     		.align	2
  47              	.L2:
  48 000c 00000000 		.word	.LANCHOR0
  49              		.cfi_endproc
  50              	.LFE37:
  52              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_RCC_GetSysClockFreq
  55              		.syntax unified
  56              		.code	16
  57              		.thumb_func
  58              		.fpu softvfp
  60              	HAL_RCC_GetSysClockFreq:
  61              	.LFB38:
  53:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  54:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
  55:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
  56:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 									 
  57:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t SystemCoreClock = 8000000;
  58:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  59:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  60:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
  61:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  62              		.loc 1 61 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  67              		.loc 1 62 2 view .LVU9
  68              		.loc 1 62 9 is_stmt 0 view .LVU10
  69 0000 E120     		movs	r0, #225
  63:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  70              		.loc 1 63 1 view .LVU11
  71              		@ sp needed
  72 0002 C003     		lsls	r0, r0, #15
  73 0004 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE38:
  77              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_RCC_GetPCLK1Freq
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  83              		.fpu softvfp
  85              	HAL_RCC_GetPCLK1Freq:
  86              	.LFB53:
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 E120     		movs	r0, #225
  92              		@ sp needed
  93 0002 C003     		lsls	r0, r0, #15
  94 0004 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE53:
  98              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
  99              		.align	1
 100              		.global	HAL_RCC_GetPCLK2Freq
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 104              		.fpu softvfp
 106              	HAL_RCC_GetPCLK2Freq:
 107              	.LFB55:
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112 0000 E120     		movs	r0, #225
 113              		@ sp needed
 114 0002 C003     		lsls	r0, r0, #15
 115 0004 7047     		bx	lr
 116              		.cfi_endproc
 117              	.LFE55:
 119              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 120              		.align	1
 121              		.global	HAL_RCC_OscConfig
 122              		.syntax unified
 123              		.code	16
 124              		.thumb_func
 125              		.fpu softvfp
 127              	HAL_RCC_OscConfig:
 128              	.LVL0:
 129              	.LFB41:
  64:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  65:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
  66:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  67:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  68:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  69:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  70:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  71:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
  72:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
  73:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
  74:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval PCLK2 frequency
  75:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  76:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
  77:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  78:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  79:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
  80:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return 7372800;
  81:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  82:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  83:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  84:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
  85:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
  86:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
  87:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
  88:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
  89:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
  90:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to LSE Off
  91:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
  92:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
  93:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to HSE Off
  94:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
  95:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
  96:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  97:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 130              		.loc 1 98 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 16
 133              		@ frame_needed = 0, uses_anonymous_args = 0
  99:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 134              		.loc 1 99 4 view .LVU13
 100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 102:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_OscInitStruct != NULL);
 135              		.loc 1 102 3 view .LVU14
 103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 136              		.loc 1 103 3 view .LVU15
 104:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 137              		.loc 1 106 3 view .LVU16
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 138              		.loc 1 98 1 is_stmt 0 view .LVU17
 139 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 140              	.LCFI0:
 141              		.cfi_def_cfa_offset 20
 142              		.cfi_offset 4, -20
 143              		.cfi_offset 5, -16
 144              		.cfi_offset 6, -12
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147              		.loc 1 106 43 view .LVU18
 148 0002 0368     		ldr	r3, [r0]
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 149              		.loc 1 98 1 view .LVU19
 150 0004 0400     		movs	r4, r0
 151 0006 85B0     		sub	sp, sp, #20
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 40
 154              		.loc 1 106 5 view .LVU20
 155 0008 DB07     		lsls	r3, r3, #31
 156 000a 2FD4     		bmi	.L8
 157              	.LVL1:
 158              	.L13:
 107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 110:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 118:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 125:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Check the HSE State */
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 131:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is ready */
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 138:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 140:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 141:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 142:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is disabled */
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 159              		.loc 1 158 3 is_stmt 1 view .LVU21
 160              		.loc 1 158 43 is_stmt 0 view .LVU22
 161 000c 2368     		ldr	r3, [r4]
 162              		.loc 1 158 5 view .LVU23
 163 000e 9B07     		lsls	r3, r3, #30
 164 0010 00D5     		bpl	.LCB99
 165 0012 81E0     		b	.L9	@long jump
 166              	.LCB99:
 167              	.L25:
 159:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 160:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 170:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 175:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI State */
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 184:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is ready */
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                 
 200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 210:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is disabled */
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 168              		.loc 1 223 3 is_stmt 1 view .LVU24
 169              		.loc 1 223 43 is_stmt 0 view .LVU25
 170 0014 2368     		ldr	r3, [r4]
 171              		.loc 1 223 5 view .LVU26
 172 0016 1B07     		lsls	r3, r3, #28
 173 0018 00D5     		bpl	.LCB106
 174 001a BCE0     		b	.L35	@long jump
 175              	.LCB106:
 176              	.L41:
 224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSI State */
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 237:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is ready */  
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 239:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 241:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 242:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 248:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is disabled */  
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 177              		.loc 1 265 3 is_stmt 1 view .LVU27
 178              		.loc 1 265 43 is_stmt 0 view .LVU28
 179 001c 2368     		ldr	r3, [r4]
 180              		.loc 1 265 5 view .LVU29
 181 001e 5B07     		lsls	r3, r3, #29
 182 0020 00D5     		bpl	.LCB113
 183 0022 DFE0     		b	.L36	@long jump
 184              	.LCB113:
 185              	.L44:
 266:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Update LSE configuration in Backup Domain control register    */
 273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 275:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 287:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 291:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 295:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 296:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 297:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 299:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 301:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 305:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is ready */  
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 307:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 309:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 311:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 312:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 313:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 316:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 319:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is disabled */  
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 321:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 328:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 333:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 335:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 186              		.loc 1 337 3 is_stmt 1 view .LVU30
 187              		.loc 1 337 43 is_stmt 0 view .LVU31
 188 0024 2368     		ldr	r3, [r4]
 189              		.loc 1 337 5 view .LVU32
 190 0026 DB06     		lsls	r3, r3, #27
 191 0028 1AD5     		bpl	.L63
 338:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 192              		.loc 1 340 5 is_stmt 1 view .LVU33
 341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 193              		.loc 1 341 5 view .LVU34
 342:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the HSI14 State */
 344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 194              		.loc 1 344 5 view .LVU35
 195              		.loc 1 344 25 is_stmt 0 view .LVU36
 196 002a 6269     		ldr	r2, [r4, #20]
 197 002c 0423     		movs	r3, #4
 198 002e B44D     		ldr	r5, .L110
 199              		.loc 1 344 7 view .LVU37
 200 0030 012A     		cmp	r2, #1
 201 0032 00D0     		beq	.LCB128
 202 0034 48E1     		b	.L64	@long jump
 203              	.LCB128:
 345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 346:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 204              		.loc 1 347 7 is_stmt 1 view .LVU38
 205 0036 696B     		ldr	r1, [r5, #52]
 348:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_ENABLE();
 351:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 206              		.loc 1 356 13 is_stmt 0 view .LVU39
 207 0038 0227     		movs	r7, #2
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 208              		.loc 1 347 7 view .LVU40
 209 003a 0B43     		orrs	r3, r1
 210 003c 6B63     		str	r3, [r5, #52]
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 211              		.loc 1 350 7 is_stmt 1 view .LVU41
 212 003e 6B6B     		ldr	r3, [r5, #52]
 213 0040 1A43     		orrs	r2, r3
 214 0042 6A63     		str	r2, [r5, #52]
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 215              		.loc 1 353 7 view .LVU42
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 216              		.loc 1 353 19 is_stmt 0 view .LVU43
 217 0044 FFF7FEFF 		bl	HAL_GetTick
 218              	.LVL2:
 219 0048 0600     		movs	r6, r0
 220              	.LVL3:
 221              		.loc 1 356 7 is_stmt 1 view .LVU44
 222              	.L65:
 223              		.loc 1 356 51 view .LVU45
 224              		.loc 1 356 13 is_stmt 0 view .LVU46
 225 004a 6B6B     		ldr	r3, [r5, #52]
 226              		.loc 1 356 51 view .LVU47
 227 004c 3B42     		tst	r3, r7
 228 004e 00D1     		bne	.LCB150
 229 0050 33E1     		b	.L66	@long jump
 230              	.LCB150:
 231              	.LVL4:
 232              	.L107:
 357:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 360:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }      
 362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       } 
 363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 366:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 369:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 371:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 373:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 233              		.loc 1 373 7 is_stmt 1 view .LVU48
 234 0052 F821     		movs	r1, #248
 235 0054 6A6B     		ldr	r2, [r5, #52]
 236 0056 A369     		ldr	r3, [r4, #24]
 237 0058 8A43     		bics	r2, r1
 238 005a DB00     		lsls	r3, r3, #3
 239 005c 1343     		orrs	r3, r2
 240 005e 6B63     		str	r3, [r5, #52]
 241              	.L63:
 374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 379:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_DISABLE();
 382:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 393:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 397:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_HSI48_SUPPORT)
 398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 399:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 403:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 406:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 407:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 408:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 State */
 416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_ENABLE();
 420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 424:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         } 
 432:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_DISABLE();
 437:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 443:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 446:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 449:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_HSI48_SUPPORT */
 453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        
 454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 242              		.loc 1 456 3 view .LVU49
 457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 243              		.loc 1 457 3 view .LVU50
 244              		.loc 1 457 30 is_stmt 0 view .LVU51
 245 0060 216A     		ldr	r1, [r4, #32]
 246              		.loc 1 457 6 view .LVU52
 247 0062 0029     		cmp	r1, #0
 248 0064 00D0     		beq	.LCB168
 249 0066 57E1     		b	.L71	@long jump
 250              	.LCB168:
 251              	.LVL5:
 252              	.L77:
 458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the parameters */
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 477:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 480:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the main PLL. */
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 490:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 491:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 493:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 494:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is ready */
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 496:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 498:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 499:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 500:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 501:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 502:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 503:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 504:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 505:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 507:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 508:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 510:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 511:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */  
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 513:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 515:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 516:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 517:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 518:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 519:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 520:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 521:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 522:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 523:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 524:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 525:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 526:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 527:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 253              		.loc 1 527 10 view .LVU53
 254 0068 0020     		movs	r0, #0
 255 006a 13E0     		b	.L14
 256              	.LVL6:
 257              	.L8:
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 258              		.loc 1 109 5 is_stmt 1 view .LVU54
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 259              		.loc 1 112 5 view .LVU55
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 260              		.loc 1 112 9 is_stmt 0 view .LVU56
 261 006c 0C22     		movs	r2, #12
 262 006e A44D     		ldr	r5, .L110
 263 0070 6B68     		ldr	r3, [r5, #4]
 264 0072 1340     		ands	r3, r2
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 265              		.loc 1 112 7 view .LVU57
 266 0074 042B     		cmp	r3, #4
 267 0076 06D0     		beq	.L11
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 268              		.loc 1 113 13 view .LVU58
 269 0078 6B68     		ldr	r3, [r5, #4]
 270 007a 1340     		ands	r3, r2
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 271              		.loc 1 113 8 view .LVU59
 272 007c 082B     		cmp	r3, #8
 273 007e 0BD1     		bne	.L12
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 274              		.loc 1 113 82 discriminator 1 view .LVU60
 275 0080 6B68     		ldr	r3, [r5, #4]
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 276              		.loc 1 113 78 discriminator 1 view .LVU61
 277 0082 DB03     		lsls	r3, r3, #15
 278 0084 08D5     		bpl	.L12
 279              	.L11:
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 280              		.loc 1 115 7 is_stmt 1 view .LVU62
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 281              		.loc 1 115 11 is_stmt 0 view .LVU63
 282 0086 2B68     		ldr	r3, [r5]
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 283              		.loc 1 115 9 view .LVU64
 284 0088 9B03     		lsls	r3, r3, #14
 285 008a BFD5     		bpl	.L13
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 286              		.loc 1 115 57 discriminator 1 view .LVU65
 287 008c 6368     		ldr	r3, [r4, #4]
 288 008e 002B     		cmp	r3, #0
 289 0090 BCD1     		bne	.L13
 290              	.LVL7:
 291              	.L29:
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 292              		.loc 1 117 16 view .LVU66
 293 0092 0120     		movs	r0, #1
 294              	.LVL8:
 295              	.L14:
 528:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 296              		.loc 1 528 1 view .LVU67
 297 0094 05B0     		add	sp, sp, #20
 298              		@ sp needed
 299 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 300              	.LVL9:
 301              	.L12:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 302              		.loc 1 123 7 is_stmt 1 view .LVU68
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 303              		.loc 1 123 7 view .LVU69
 304 0098 6368     		ldr	r3, [r4, #4]
 305 009a 012B     		cmp	r3, #1
 306 009c 13D1     		bne	.L15
 307              	.L108:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 308              		.loc 1 123 7 discriminator 7 view .LVU70
 309 009e 8023     		movs	r3, #128
 310 00a0 2A68     		ldr	r2, [r5]
 311 00a2 5B02     		lsls	r3, r3, #9
 312 00a4 1343     		orrs	r3, r2
 313              	.L104:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 314              		.loc 1 123 7 is_stmt 0 discriminator 8 view .LVU71
 315 00a6 2B60     		str	r3, [r5]
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 316              		.loc 1 130 9 is_stmt 1 discriminator 8 view .LVU72
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 317              		.loc 1 130 21 is_stmt 0 discriminator 8 view .LVU73
 318 00a8 FFF7FEFF 		bl	HAL_GetTick
 319              	.LVL10:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 320              		.loc 1 133 15 discriminator 8 view .LVU74
 321 00ac 8027     		movs	r7, #128
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 322              		.loc 1 130 21 discriminator 8 view .LVU75
 323 00ae 0600     		movs	r6, r0
 324              	.LVL11:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 325              		.loc 1 133 9 is_stmt 1 discriminator 8 view .LVU76
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 326              		.loc 1 133 15 is_stmt 0 discriminator 8 view .LVU77
 327 00b0 BF02     		lsls	r7, r7, #10
 328              	.LVL12:
 329              	.L21:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 330              		.loc 1 133 51 is_stmt 1 view .LVU78
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 331              		.loc 1 133 15 is_stmt 0 view .LVU79
 332 00b2 2B68     		ldr	r3, [r5]
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 333              		.loc 1 133 51 view .LVU80
 334 00b4 3B42     		tst	r3, r7
 335 00b6 A9D1     		bne	.L13
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 336              		.loc 1 135 11 is_stmt 1 view .LVU81
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 337              		.loc 1 135 15 is_stmt 0 view .LVU82
 338 00b8 FFF7FEFF 		bl	HAL_GetTick
 339              	.LVL13:
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 340              		.loc 1 135 29 view .LVU83
 341 00bc 801B     		subs	r0, r0, r6
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 342              		.loc 1 135 13 view .LVU84
 343 00be 6428     		cmp	r0, #100
 344 00c0 F7D9     		bls	.L21
 345              	.LVL14:
 346              	.L23:
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 347              		.loc 1 137 20 view .LVU85
 348 00c2 0320     		movs	r0, #3
 349 00c4 E6E7     		b	.L14
 350              	.LVL15:
 351              	.L15:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 352              		.loc 1 123 7 is_stmt 1 discriminator 2 view .LVU86
 353 00c6 002B     		cmp	r3, #0
 354 00c8 16D1     		bne	.L17
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 355              		.loc 1 123 7 discriminator 4 view .LVU87
 356 00ca 2B68     		ldr	r3, [r5]
 357 00cc 8D4A     		ldr	r2, .L110+4
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 358              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU88
 359 00ce 8027     		movs	r7, #128
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 360              		.loc 1 123 7 discriminator 4 view .LVU89
 361 00d0 1340     		ands	r3, r2
 362 00d2 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 363              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU90
 364 00d4 2B68     		ldr	r3, [r5]
 365 00d6 8C4A     		ldr	r2, .L110+8
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 366              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU91
 367 00d8 BF02     		lsls	r7, r7, #10
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 368              		.loc 1 123 7 discriminator 4 view .LVU92
 369 00da 1340     		ands	r3, r2
 370 00dc 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 371              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU93
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 372              		.loc 1 127 7 discriminator 4 view .LVU94
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 373              		.loc 1 144 9 discriminator 4 view .LVU95
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 374              		.loc 1 144 21 is_stmt 0 discriminator 4 view .LVU96
 375 00de FFF7FEFF 		bl	HAL_GetTick
 376              	.LVL16:
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 377              		.loc 1 144 21 discriminator 4 view .LVU97
 378 00e2 0600     		movs	r6, r0
 379              	.LVL17:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 380              		.loc 1 147 9 is_stmt 1 discriminator 4 view .LVU98
 381              	.L18:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 382              		.loc 1 147 51 view .LVU99
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 383              		.loc 1 147 15 is_stmt 0 view .LVU100
 384 00e4 2B68     		ldr	r3, [r5]
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 385              		.loc 1 147 51 view .LVU101
 386 00e6 3B42     		tst	r3, r7
 387 00e8 00D1     		bne	.LCB303
 388 00ea 8FE7     		b	.L13	@long jump
 389              	.LCB303:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 390              		.loc 1 149 12 is_stmt 1 view .LVU102
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 391              		.loc 1 149 16 is_stmt 0 view .LVU103
 392 00ec FFF7FEFF 		bl	HAL_GetTick
 393              	.LVL18:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 394              		.loc 1 149 30 view .LVU104
 395 00f0 801B     		subs	r0, r0, r6
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 396              		.loc 1 149 14 view .LVU105
 397 00f2 6428     		cmp	r0, #100
 398 00f4 F6D9     		bls	.L18
 399 00f6 E4E7     		b	.L23
 400              	.LVL19:
 401              	.L17:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 402              		.loc 1 123 7 is_stmt 1 discriminator 5 view .LVU106
 403 00f8 052B     		cmp	r3, #5
 404 00fa 05D1     		bne	.L19
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 405              		.loc 1 123 7 discriminator 7 view .LVU107
 406 00fc 8023     		movs	r3, #128
 407 00fe 2A68     		ldr	r2, [r5]
 408 0100 DB02     		lsls	r3, r3, #11
 409 0102 1343     		orrs	r3, r2
 410 0104 2B60     		str	r3, [r5]
 411 0106 CAE7     		b	.L108
 412              	.L19:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 413              		.loc 1 123 7 discriminator 8 view .LVU108
 414 0108 2B68     		ldr	r3, [r5]
 415 010a 7E4A     		ldr	r2, .L110+4
 416 010c 1340     		ands	r3, r2
 417 010e 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 418              		.loc 1 123 7 discriminator 8 view .LVU109
 419 0110 2B68     		ldr	r3, [r5]
 420 0112 7D4A     		ldr	r2, .L110+8
 421 0114 1340     		ands	r3, r2
 422 0116 C6E7     		b	.L104
 423              	.LVL20:
 424              	.L9:
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 425              		.loc 1 161 5 view .LVU110
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 426              		.loc 1 162 5 view .LVU111
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 427              		.loc 1 165 5 view .LVU112
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 428              		.loc 1 165 9 is_stmt 0 view .LVU113
 429 0118 0C22     		movs	r2, #12
 430 011a 794D     		ldr	r5, .L110
 431 011c 6B68     		ldr	r3, [r5, #4]
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 432              		.loc 1 165 7 view .LVU114
 433 011e 1342     		tst	r3, r2
 434 0120 06D0     		beq	.L26
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 435              		.loc 1 166 13 view .LVU115
 436 0122 6B68     		ldr	r3, [r5, #4]
 437 0124 1340     		ands	r3, r2
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 438              		.loc 1 166 8 view .LVU116
 439 0126 082B     		cmp	r3, #8
 440 0128 10D1     		bne	.L27
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 441              		.loc 1 166 82 discriminator 1 view .LVU117
 442 012a 6B68     		ldr	r3, [r5, #4]
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 443              		.loc 1 166 78 discriminator 1 view .LVU118
 444 012c DB03     		lsls	r3, r3, #15
 445 012e 0DD4     		bmi	.L27
 446              	.L26:
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 447              		.loc 1 169 7 is_stmt 1 view .LVU119
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 448              		.loc 1 169 11 is_stmt 0 view .LVU120
 449 0130 2B68     		ldr	r3, [r5]
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 450              		.loc 1 169 9 view .LVU121
 451 0132 9B07     		lsls	r3, r3, #30
 452 0134 02D5     		bpl	.L105
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 453              		.loc 1 169 57 discriminator 1 view .LVU122
 454 0136 E368     		ldr	r3, [r4, #12]
 455 0138 012B     		cmp	r3, #1
 456 013a AAD1     		bne	.L29
 457              	.L105:
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 458              		.loc 1 201 9 is_stmt 1 view .LVU123
 459 013c F821     		movs	r1, #248
 460 013e 2A68     		ldr	r2, [r5]
 461 0140 2369     		ldr	r3, [r4, #16]
 462 0142 8A43     		bics	r2, r1
 463 0144 DB00     		lsls	r3, r3, #3
 464 0146 1343     		orrs	r3, r2
 465 0148 2B60     		str	r3, [r5]
 466 014a 63E7     		b	.L25
 467              	.L27:
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 468              		.loc 1 183 7 view .LVU124
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 469              		.loc 1 183 9 is_stmt 0 view .LVU125
 470 014c E268     		ldr	r2, [r4, #12]
 471 014e 0123     		movs	r3, #1
 472 0150 002A     		cmp	r2, #0
 473 0152 0FD0     		beq	.L30
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 474              		.loc 1 186 9 is_stmt 1 view .LVU126
 475 0154 2A68     		ldr	r2, [r5]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 476              		.loc 1 192 15 is_stmt 0 view .LVU127
 477 0156 0227     		movs	r7, #2
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 478              		.loc 1 186 9 view .LVU128
 479 0158 1343     		orrs	r3, r2
 480 015a 2B60     		str	r3, [r5]
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 481              		.loc 1 189 9 is_stmt 1 view .LVU129
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 482              		.loc 1 189 21 is_stmt 0 view .LVU130
 483 015c FFF7FEFF 		bl	HAL_GetTick
 484              	.LVL21:
 485 0160 0600     		movs	r6, r0
 486              	.LVL22:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 487              		.loc 1 192 9 is_stmt 1 view .LVU131
 488              	.L31:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 489              		.loc 1 192 51 view .LVU132
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 490              		.loc 1 192 15 is_stmt 0 view .LVU133
 491 0162 2B68     		ldr	r3, [r5]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 492              		.loc 1 192 51 view .LVU134
 493 0164 3B42     		tst	r3, r7
 494 0166 E9D1     		bne	.L105
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 495              		.loc 1 194 11 is_stmt 1 view .LVU135
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 496              		.loc 1 194 15 is_stmt 0 view .LVU136
 497 0168 FFF7FEFF 		bl	HAL_GetTick
 498              	.LVL23:
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 499              		.loc 1 194 29 view .LVU137
 500 016c 801B     		subs	r0, r0, r6
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 501              		.loc 1 194 13 view .LVU138
 502 016e 0228     		cmp	r0, #2
 503 0170 F7D9     		bls	.L31
 504 0172 A6E7     		b	.L23
 505              	.LVL24:
 506              	.L30:
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 507              		.loc 1 206 9 is_stmt 1 view .LVU139
 508 0174 2A68     		ldr	r2, [r5]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 509              		.loc 1 212 15 is_stmt 0 view .LVU140
 510 0176 0227     		movs	r7, #2
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 511              		.loc 1 206 9 view .LVU141
 512 0178 9A43     		bics	r2, r3
 513 017a 2A60     		str	r2, [r5]
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 514              		.loc 1 209 9 is_stmt 1 view .LVU142
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 515              		.loc 1 209 21 is_stmt 0 view .LVU143
 516 017c FFF7FEFF 		bl	HAL_GetTick
 517              	.LVL25:
 518 0180 0600     		movs	r6, r0
 519              	.LVL26:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 520              		.loc 1 212 9 is_stmt 1 view .LVU144
 521              	.L33:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 522              		.loc 1 212 51 view .LVU145
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 523              		.loc 1 212 15 is_stmt 0 view .LVU146
 524 0182 2B68     		ldr	r3, [r5]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 525              		.loc 1 212 51 view .LVU147
 526 0184 3B42     		tst	r3, r7
 527 0186 00D1     		bne	.LCB438
 528 0188 44E7     		b	.L25	@long jump
 529              	.LCB438:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 530              		.loc 1 214 11 is_stmt 1 view .LVU148
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 531              		.loc 1 214 15 is_stmt 0 view .LVU149
 532 018a FFF7FEFF 		bl	HAL_GetTick
 533              	.LVL27:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 534              		.loc 1 214 29 view .LVU150
 535 018e 801B     		subs	r0, r0, r6
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 536              		.loc 1 214 13 view .LVU151
 537 0190 0228     		cmp	r0, #2
 538 0192 F6D9     		bls	.L33
 539 0194 95E7     		b	.L23
 540              	.LVL28:
 541              	.L35:
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 542              		.loc 1 226 5 is_stmt 1 view .LVU152
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 543              		.loc 1 229 5 view .LVU153
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 544              		.loc 1 229 7 is_stmt 0 view .LVU154
 545 0196 E269     		ldr	r2, [r4, #28]
 546 0198 0123     		movs	r3, #1
 547 019a 594D     		ldr	r5, .L110
 548 019c 002A     		cmp	r2, #0
 549 019e 10D0     		beq	.L38
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 550              		.loc 1 232 7 is_stmt 1 view .LVU155
 551 01a0 6A6A     		ldr	r2, [r5, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 552              		.loc 1 238 13 is_stmt 0 view .LVU156
 553 01a2 0227     		movs	r7, #2
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 554              		.loc 1 232 7 view .LVU157
 555 01a4 1343     		orrs	r3, r2
 556 01a6 6B62     		str	r3, [r5, #36]
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 557              		.loc 1 235 7 is_stmt 1 view .LVU158
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 558              		.loc 1 235 19 is_stmt 0 view .LVU159
 559 01a8 FFF7FEFF 		bl	HAL_GetTick
 560              	.LVL29:
 561 01ac 0600     		movs	r6, r0
 562              	.LVL30:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 563              		.loc 1 238 7 is_stmt 1 view .LVU160
 564              	.L39:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 565              		.loc 1 238 49 view .LVU161
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 566              		.loc 1 238 13 is_stmt 0 view .LVU162
 567 01ae 6B6A     		ldr	r3, [r5, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 568              		.loc 1 238 49 view .LVU163
 569 01b0 3B42     		tst	r3, r7
 570 01b2 00D0     		beq	.LCB475
 571 01b4 32E7     		b	.L41	@long jump
 572              	.LCB475:
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 573              		.loc 1 240 9 is_stmt 1 view .LVU164
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 574              		.loc 1 240 13 is_stmt 0 view .LVU165
 575 01b6 FFF7FEFF 		bl	HAL_GetTick
 576              	.LVL31:
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 577              		.loc 1 240 27 view .LVU166
 578 01ba 801B     		subs	r0, r0, r6
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 579              		.loc 1 240 11 view .LVU167
 580 01bc 0228     		cmp	r0, #2
 581 01be F6D9     		bls	.L39
 582 01c0 7FE7     		b	.L23
 583              	.LVL32:
 584              	.L38:
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 585              		.loc 1 249 7 is_stmt 1 view .LVU168
 586 01c2 6A6A     		ldr	r2, [r5, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 587              		.loc 1 255 13 is_stmt 0 view .LVU169
 588 01c4 0227     		movs	r7, #2
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 589              		.loc 1 249 7 view .LVU170
 590 01c6 9A43     		bics	r2, r3
 591 01c8 6A62     		str	r2, [r5, #36]
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 592              		.loc 1 252 7 is_stmt 1 view .LVU171
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 593              		.loc 1 252 19 is_stmt 0 view .LVU172
 594 01ca FFF7FEFF 		bl	HAL_GetTick
 595              	.LVL33:
 596 01ce 0600     		movs	r6, r0
 597              	.LVL34:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 598              		.loc 1 255 7 is_stmt 1 view .LVU173
 599              	.L42:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 600              		.loc 1 255 49 view .LVU174
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 601              		.loc 1 255 13 is_stmt 0 view .LVU175
 602 01d0 6B6A     		ldr	r3, [r5, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 603              		.loc 1 255 49 view .LVU176
 604 01d2 3B42     		tst	r3, r7
 605 01d4 00D1     		bne	.LCB504
 606 01d6 21E7     		b	.L41	@long jump
 607              	.LCB504:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 608              		.loc 1 257 9 is_stmt 1 view .LVU177
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 609              		.loc 1 257 13 is_stmt 0 view .LVU178
 610 01d8 FFF7FEFF 		bl	HAL_GetTick
 611              	.LVL35:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 612              		.loc 1 257 27 view .LVU179
 613 01dc 801B     		subs	r0, r0, r6
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 614              		.loc 1 257 11 view .LVU180
 615 01de 0228     		cmp	r0, #2
 616 01e0 F6D9     		bls	.L42
 617 01e2 6EE7     		b	.L23
 618              	.LVL36:
 619              	.L36:
 620              	.LBB12:
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 621              		.loc 1 267 5 is_stmt 1 view .LVU181
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 622              		.loc 1 270 5 view .LVU182
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 623              		.loc 1 274 5 view .LVU183
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 624              		.loc 1 274 8 is_stmt 0 view .LVU184
 625 01e4 8022     		movs	r2, #128
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 626              		.loc 1 267 22 view .LVU185
 627 01e6 0021     		movs	r1, #0
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 628              		.loc 1 274 8 view .LVU186
 629 01e8 454D     		ldr	r5, .L110
 630 01ea 5205     		lsls	r2, r2, #21
 631 01ec EB69     		ldr	r3, [r5, #28]
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 632              		.loc 1 267 22 view .LVU187
 633 01ee 0091     		str	r1, [sp]
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 634              		.loc 1 274 7 view .LVU188
 635 01f0 1342     		tst	r3, r2
 636 01f2 08D1     		bne	.L45
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 637              		.loc 1 276 7 is_stmt 1 view .LVU189
 638              	.LBB13:
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 639              		.loc 1 276 7 view .LVU190
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 640              		.loc 1 276 7 view .LVU191
 641 01f4 EB69     		ldr	r3, [r5, #28]
 642 01f6 1343     		orrs	r3, r2
 643 01f8 EB61     		str	r3, [r5, #28]
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 644              		.loc 1 276 7 view .LVU192
 645 01fa EB69     		ldr	r3, [r5, #28]
 646 01fc 1340     		ands	r3, r2
 647 01fe 0393     		str	r3, [sp, #12]
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 648              		.loc 1 276 7 view .LVU193
 649 0200 039B     		ldr	r3, [sp, #12]
 650              	.LBE13:
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 651              		.loc 1 276 7 view .LVU194
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 652              		.loc 1 277 7 view .LVU195
 653              	.LVL37:
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 654              		.loc 1 277 21 is_stmt 0 view .LVU196
 655 0202 0123     		movs	r3, #1
 656 0204 0093     		str	r3, [sp]
 657              	.LVL38:
 658              	.L45:
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 659              		.loc 1 280 5 is_stmt 1 view .LVU197
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 660              		.loc 1 280 8 is_stmt 0 view .LVU198
 661 0206 8027     		movs	r7, #128
 662 0208 404E     		ldr	r6, .L110+12
 663 020a 7F00     		lsls	r7, r7, #1
 664 020c 3368     		ldr	r3, [r6]
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 665              		.loc 1 280 7 view .LVU199
 666 020e 3B42     		tst	r3, r7
 667 0210 15D0     		beq	.L46
 668              	.L51:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 669              		.loc 1 298 5 is_stmt 1 view .LVU200
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 670              		.loc 1 298 5 view .LVU201
 671 0212 A368     		ldr	r3, [r4, #8]
 672 0214 012B     		cmp	r3, #1
 673 0216 22D1     		bne	.L98
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 674              		.loc 1 298 5 discriminator 1 view .LVU202
 675 0218 2A6A     		ldr	r2, [r5, #32]
 676              	.L109:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 677              		.loc 1 298 5 is_stmt 0 discriminator 7 view .LVU203
 678 021a 1343     		orrs	r3, r2
 679              	.L106:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 680              		.loc 1 298 5 discriminator 8 view .LVU204
 681 021c 2B62     		str	r3, [r5, #32]
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 682              		.loc 1 303 7 is_stmt 1 discriminator 8 view .LVU205
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 683              		.loc 1 303 19 is_stmt 0 discriminator 8 view .LVU206
 684 021e FFF7FEFF 		bl	HAL_GetTick
 685              	.LVL39:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 686              		.loc 1 306 13 discriminator 8 view .LVU207
 687 0222 0227     		movs	r7, #2
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 688              		.loc 1 303 19 discriminator 8 view .LVU208
 689 0224 0600     		movs	r6, r0
 690              	.LVL40:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 691              		.loc 1 306 7 is_stmt 1 discriminator 8 view .LVU209
 692              	.L57:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 693              		.loc 1 306 49 view .LVU210
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 694              		.loc 1 306 13 is_stmt 0 view .LVU211
 695 0226 2B6A     		ldr	r3, [r5, #32]
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 696              		.loc 1 306 49 view .LVU212
 697 0228 3B42     		tst	r3, r7
 698 022a 3FD0     		beq	.L58
 699              	.L61:
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 700              		.loc 1 330 5 is_stmt 1 view .LVU213
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 701              		.loc 1 330 7 is_stmt 0 view .LVU214
 702 022c 009B     		ldr	r3, [sp]
 703 022e 012B     		cmp	r3, #1
 704 0230 00D0     		beq	.LCB595
 705 0232 F7E6     		b	.L44	@long jump
 706              	.LCB595:
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 707              		.loc 1 332 7 is_stmt 1 view .LVU215
 708 0234 EB69     		ldr	r3, [r5, #28]
 709 0236 364A     		ldr	r2, .L110+16
 710 0238 1340     		ands	r3, r2
 711 023a EB61     		str	r3, [r5, #28]
 712 023c F2E6     		b	.L44
 713              	.LVL41:
 714              	.L46:
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 715              		.loc 1 283 7 view .LVU216
 716 023e 3368     		ldr	r3, [r6]
 717 0240 3B43     		orrs	r3, r7
 718 0242 3360     		str	r3, [r6]
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 719              		.loc 1 286 7 view .LVU217
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 720              		.loc 1 286 19 is_stmt 0 view .LVU218
 721 0244 FFF7FEFF 		bl	HAL_GetTick
 722              	.LVL42:
 723 0248 0190     		str	r0, [sp, #4]
 724              	.LVL43:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 725              		.loc 1 288 7 is_stmt 1 view .LVU219
 726              	.L49:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 727              		.loc 1 288 13 view .LVU220
 728 024a 3368     		ldr	r3, [r6]
 729 024c 3B42     		tst	r3, r7
 730 024e E0D1     		bne	.L51
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 731              		.loc 1 290 9 view .LVU221
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 732              		.loc 1 290 13 is_stmt 0 view .LVU222
 733 0250 FFF7FEFF 		bl	HAL_GetTick
 734              	.LVL44:
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 735              		.loc 1 290 27 view .LVU223
 736 0254 019B     		ldr	r3, [sp, #4]
 737 0256 C01A     		subs	r0, r0, r3
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 738              		.loc 1 290 11 view .LVU224
 739 0258 6428     		cmp	r0, #100
 740 025a F6D9     		bls	.L49
 741 025c 31E7     		b	.L23
 742              	.LVL45:
 743              	.L98:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 744              		.loc 1 298 5 is_stmt 1 discriminator 2 view .LVU225
 745 025e 0122     		movs	r2, #1
 746 0260 002B     		cmp	r3, #0
 747 0262 14D1     		bne	.L53
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 748              		.loc 1 298 5 discriminator 4 view .LVU226
 749 0264 2B6A     		ldr	r3, [r5, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 750              		.loc 1 320 13 is_stmt 0 discriminator 4 view .LVU227
 751 0266 0227     		movs	r7, #2
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 752              		.loc 1 298 5 discriminator 4 view .LVU228
 753 0268 9343     		bics	r3, r2
 754 026a 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 755              		.loc 1 298 5 is_stmt 1 discriminator 4 view .LVU229
 756 026c 2B6A     		ldr	r3, [r5, #32]
 757 026e 0332     		adds	r2, r2, #3
 758 0270 9343     		bics	r3, r2
 759 0272 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 760              		.loc 1 298 5 discriminator 4 view .LVU230
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 761              		.loc 1 300 5 discriminator 4 view .LVU231
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 762              		.loc 1 317 7 discriminator 4 view .LVU232
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 763              		.loc 1 317 19 is_stmt 0 discriminator 4 view .LVU233
 764 0274 FFF7FEFF 		bl	HAL_GetTick
 765              	.LVL46:
 766 0278 0600     		movs	r6, r0
 767              	.LVL47:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 768              		.loc 1 320 7 is_stmt 1 discriminator 4 view .LVU234
 769              	.L54:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 770              		.loc 1 320 49 view .LVU235
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 771              		.loc 1 320 13 is_stmt 0 view .LVU236
 772 027a 2B6A     		ldr	r3, [r5, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 773              		.loc 1 320 49 view .LVU237
 774 027c 3B42     		tst	r3, r7
 775 027e D5D0     		beq	.L61
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 776              		.loc 1 322 9 is_stmt 1 view .LVU238
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 777              		.loc 1 322 13 is_stmt 0 view .LVU239
 778 0280 FFF7FEFF 		bl	HAL_GetTick
 779              	.LVL48:
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 780              		.loc 1 322 11 view .LVU240
 781 0284 234B     		ldr	r3, .L110+20
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 782              		.loc 1 322 27 view .LVU241
 783 0286 801B     		subs	r0, r0, r6
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 784              		.loc 1 322 11 view .LVU242
 785 0288 9842     		cmp	r0, r3
 786 028a F6D9     		bls	.L54
 787 028c 19E7     		b	.L23
 788              	.LVL49:
 789              	.L53:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 790              		.loc 1 298 5 is_stmt 1 discriminator 5 view .LVU243
 791 028e 052B     		cmp	r3, #5
 792 0290 05D1     		bne	.L55
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 793              		.loc 1 298 5 discriminator 7 view .LVU244
 794 0292 296A     		ldr	r1, [r5, #32]
 795 0294 013B     		subs	r3, r3, #1
 796 0296 0B43     		orrs	r3, r1
 797 0298 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 798              		.loc 1 298 5 discriminator 7 view .LVU245
 799 029a 2B6A     		ldr	r3, [r5, #32]
 800 029c BDE7     		b	.L109
 801              	.L55:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 802              		.loc 1 298 5 discriminator 8 view .LVU246
 803 029e 2B6A     		ldr	r3, [r5, #32]
 804 02a0 9343     		bics	r3, r2
 805 02a2 0422     		movs	r2, #4
 806 02a4 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 807              		.loc 1 298 5 discriminator 8 view .LVU247
 808 02a6 2B6A     		ldr	r3, [r5, #32]
 809 02a8 9343     		bics	r3, r2
 810 02aa B7E7     		b	.L106
 811              	.LVL50:
 812              	.L58:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 813              		.loc 1 308 9 view .LVU248
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 814              		.loc 1 308 13 is_stmt 0 view .LVU249
 815 02ac FFF7FEFF 		bl	HAL_GetTick
 816              	.LVL51:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 817              		.loc 1 308 11 view .LVU250
 818 02b0 184B     		ldr	r3, .L110+20
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 819              		.loc 1 308 27 view .LVU251
 820 02b2 801B     		subs	r0, r0, r6
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 821              		.loc 1 308 11 view .LVU252
 822 02b4 9842     		cmp	r0, r3
 823 02b6 B6D9     		bls	.L57
 824 02b8 03E7     		b	.L23
 825              	.LVL52:
 826              	.L66:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 827              		.loc 1 308 11 view .LVU253
 828              	.LBE12:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 829              		.loc 1 358 9 is_stmt 1 view .LVU254
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 830              		.loc 1 358 13 is_stmt 0 view .LVU255
 831 02ba FFF7FEFF 		bl	HAL_GetTick
 832              	.LVL53:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 833              		.loc 1 358 27 view .LVU256
 834 02be 801B     		subs	r0, r0, r6
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 835              		.loc 1 358 11 view .LVU257
 836 02c0 0228     		cmp	r0, #2
 837 02c2 00D8     		bhi	.LCB725
 838 02c4 C1E6     		b	.L65	@long jump
 839              	.LCB725:
 840 02c6 FCE6     		b	.L23
 841              	.LVL54:
 842              	.L64:
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 843              		.loc 1 367 10 is_stmt 1 view .LVU258
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 844              		.loc 1 367 12 is_stmt 0 view .LVU259
 845 02c8 0532     		adds	r2, r2, #5
 846 02ca 03D1     		bne	.L67
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 847              		.loc 1 370 7 is_stmt 1 view .LVU260
 848 02cc 6A6B     		ldr	r2, [r5, #52]
 849 02ce 9A43     		bics	r2, r3
 850 02d0 6A63     		str	r2, [r5, #52]
 851 02d2 BEE6     		b	.L107
 852              	.L67:
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 853              		.loc 1 378 7 view .LVU261
 854 02d4 6A6B     		ldr	r2, [r5, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 855              		.loc 1 387 13 is_stmt 0 view .LVU262
 856 02d6 0227     		movs	r7, #2
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 857              		.loc 1 378 7 view .LVU263
 858 02d8 1343     		orrs	r3, r2
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 859              		.loc 1 381 7 view .LVU264
 860 02da 0122     		movs	r2, #1
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 861              		.loc 1 378 7 view .LVU265
 862 02dc 6B63     		str	r3, [r5, #52]
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 863              		.loc 1 381 7 is_stmt 1 view .LVU266
 864 02de 6B6B     		ldr	r3, [r5, #52]
 865 02e0 9343     		bics	r3, r2
 866 02e2 6B63     		str	r3, [r5, #52]
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 867              		.loc 1 384 7 view .LVU267
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 868              		.loc 1 384 19 is_stmt 0 view .LVU268
 869 02e4 FFF7FEFF 		bl	HAL_GetTick
 870              	.LVL55:
 871 02e8 0600     		movs	r6, r0
 872              	.LVL56:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 873              		.loc 1 387 7 is_stmt 1 view .LVU269
 874              	.L68:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 875              		.loc 1 387 51 view .LVU270
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 876              		.loc 1 387 13 is_stmt 0 view .LVU271
 877 02ea 6B6B     		ldr	r3, [r5, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 878              		.loc 1 387 51 view .LVU272
 879 02ec 3B42     		tst	r3, r7
 880 02ee 00D1     		bne	.LCB764
 881 02f0 B6E6     		b	.L63	@long jump
 882              	.LCB764:
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 883              		.loc 1 389 9 is_stmt 1 view .LVU273
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 884              		.loc 1 389 13 is_stmt 0 view .LVU274
 885 02f2 FFF7FEFF 		bl	HAL_GetTick
 886              	.LVL57:
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 887              		.loc 1 389 27 view .LVU275
 888 02f6 801B     		subs	r0, r0, r6
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 889              		.loc 1 389 11 view .LVU276
 890 02f8 0228     		cmp	r0, #2
 891 02fa F6D9     		bls	.L68
 892 02fc E1E6     		b	.L23
 893              	.L111:
 894 02fe C046     		.align	2
 895              	.L110:
 896 0300 00100240 		.word	1073876992
 897 0304 FFFFFEFF 		.word	-65537
 898 0308 FFFFFBFF 		.word	-262145
 899 030c 00700040 		.word	1073770496
 900 0310 FFFFFFEF 		.word	-268435457
 901 0314 88130000 		.word	5000
 902              	.LVL58:
 903              	.L71:
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 904              		.loc 1 460 5 is_stmt 1 view .LVU277
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 905              		.loc 1 460 8 is_stmt 0 view .LVU278
 906 0318 0C22     		movs	r2, #12
 907 031a 264D     		ldr	r5, .L112
 523:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 908              		.loc 1 523 14 view .LVU279
 909 031c 0120     		movs	r0, #1
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 910              		.loc 1 460 8 view .LVU280
 911 031e 6B68     		ldr	r3, [r5, #4]
 912 0320 1340     		ands	r3, r2
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 913              		.loc 1 460 7 view .LVU281
 914 0322 082B     		cmp	r3, #8
 915 0324 00D1     		bne	.LCB795
 916 0326 B5E6     		b	.L14	@long jump
 917              	.LCB795:
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 918              		.loc 1 462 7 is_stmt 1 view .LVU282
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 919              		.loc 1 470 9 is_stmt 0 view .LVU283
 920 0328 2B68     		ldr	r3, [r5]
 921 032a 234A     		ldr	r2, .L112+4
 922 032c 1340     		ands	r3, r2
 923 032e 2B60     		str	r3, [r5]
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 924              		.loc 1 462 9 view .LVU284
 925 0330 0229     		cmp	r1, #2
 926 0332 2FD1     		bne	.L72
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 927              		.loc 1 465 9 is_stmt 1 view .LVU285
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 928              		.loc 1 466 9 view .LVU286
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 929              		.loc 1 467 9 view .LVU287
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 930              		.loc 1 470 9 view .LVU288
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 931              		.loc 1 473 9 view .LVU289
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 932              		.loc 1 473 21 is_stmt 0 view .LVU290
 933 0334 FFF7FEFF 		bl	HAL_GetTick
 934              	.LVL59:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 935              		.loc 1 476 15 view .LVU291
 936 0338 8027     		movs	r7, #128
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 937              		.loc 1 473 21 view .LVU292
 938 033a 0600     		movs	r6, r0
 939              	.LVL60:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 940              		.loc 1 476 9 is_stmt 1 view .LVU293
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 941              		.loc 1 476 15 is_stmt 0 view .LVU294
 942 033c BF04     		lsls	r7, r7, #18
 943              	.LVL61:
 944              	.L73:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 945              		.loc 1 476 52 is_stmt 1 view .LVU295
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 946              		.loc 1 476 15 is_stmt 0 view .LVU296
 947 033e 2B68     		ldr	r3, [r5]
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 948              		.loc 1 476 52 view .LVU297
 949 0340 3B42     		tst	r3, r7
 950 0342 21D1     		bne	.L74
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 951              		.loc 1 485 9 is_stmt 1 view .LVU298
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 952              		.loc 1 485 9 view .LVU299
 953 0344 0F22     		movs	r2, #15
 954 0346 EB6A     		ldr	r3, [r5, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 955              		.loc 1 495 15 is_stmt 0 view .LVU300
 956 0348 8026     		movs	r6, #128
 957              	.LVL62:
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 958              		.loc 1 485 9 view .LVU301
 959 034a 9343     		bics	r3, r2
 960 034c E26A     		ldr	r2, [r4, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 961              		.loc 1 495 15 view .LVU302
 962 034e B604     		lsls	r6, r6, #18
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 963              		.loc 1 485 9 view .LVU303
 964 0350 1343     		orrs	r3, r2
 965 0352 EB62     		str	r3, [r5, #44]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 966              		.loc 1 485 9 is_stmt 1 view .LVU304
 967 0354 616A     		ldr	r1, [r4, #36]
 968 0356 A36A     		ldr	r3, [r4, #40]
 969 0358 6A68     		ldr	r2, [r5, #4]
 970 035a 0B43     		orrs	r3, r1
 971 035c 1749     		ldr	r1, .L112+8
 972 035e 0A40     		ands	r2, r1
 973 0360 1343     		orrs	r3, r2
 974 0362 6B60     		str	r3, [r5, #4]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 975              		.loc 1 485 9 view .LVU305
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 976              		.loc 1 489 9 view .LVU306
 977 0364 8023     		movs	r3, #128
 978 0366 2A68     		ldr	r2, [r5]
 979 0368 5B04     		lsls	r3, r3, #17
 980 036a 1343     		orrs	r3, r2
 981 036c 2B60     		str	r3, [r5]
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 982              		.loc 1 492 9 view .LVU307
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 983              		.loc 1 492 21 is_stmt 0 view .LVU308
 984 036e FFF7FEFF 		bl	HAL_GetTick
 985              	.LVL63:
 986 0372 0400     		movs	r4, r0
 987              	.LVL64:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 988              		.loc 1 495 9 is_stmt 1 view .LVU309
 989              	.L75:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 990              		.loc 1 495 52 view .LVU310
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 991              		.loc 1 495 15 is_stmt 0 view .LVU311
 992 0374 2B68     		ldr	r3, [r5]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 993              		.loc 1 495 52 view .LVU312
 994 0376 3342     		tst	r3, r6
 995 0378 00D0     		beq	.LCB862
 996 037a 75E6     		b	.L77	@long jump
 997              	.LCB862:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 998              		.loc 1 497 11 is_stmt 1 view .LVU313
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 999              		.loc 1 497 15 is_stmt 0 view .LVU314
 1000 037c FFF7FEFF 		bl	HAL_GetTick
 1001              	.LVL65:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1002              		.loc 1 497 29 view .LVU315
 1003 0380 001B     		subs	r0, r0, r4
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1004              		.loc 1 497 13 view .LVU316
 1005 0382 0228     		cmp	r0, #2
 1006 0384 F6D9     		bls	.L75
 1007 0386 9CE6     		b	.L23
 1008              	.LVL66:
 1009              	.L74:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1010              		.loc 1 478 11 is_stmt 1 view .LVU317
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1011              		.loc 1 478 15 is_stmt 0 view .LVU318
 1012 0388 FFF7FEFF 		bl	HAL_GetTick
 1013              	.LVL67:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1014              		.loc 1 478 29 view .LVU319
 1015 038c 801B     		subs	r0, r0, r6
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1016              		.loc 1 478 13 view .LVU320
 1017 038e 0228     		cmp	r0, #2
 1018 0390 D5D9     		bls	.L73
 1019 0392 96E6     		b	.L23
 1020              	.LVL68:
 1021              	.L72:
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 1022              		.loc 1 506 9 is_stmt 1 view .LVU321
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1023              		.loc 1 509 9 view .LVU322
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1024              		.loc 1 509 21 is_stmt 0 view .LVU323
 1025 0394 FFF7FEFF 		bl	HAL_GetTick
 1026              	.LVL69:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1027              		.loc 1 512 15 view .LVU324
 1028 0398 8026     		movs	r6, #128
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1029              		.loc 1 509 21 view .LVU325
 1030 039a 0400     		movs	r4, r0
 1031              	.LVL70:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1032              		.loc 1 512 9 is_stmt 1 view .LVU326
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1033              		.loc 1 512 15 is_stmt 0 view .LVU327
 1034 039c B604     		lsls	r6, r6, #18
 1035              	.LVL71:
 1036              	.L78:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1037              		.loc 1 512 52 is_stmt 1 view .LVU328
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1038              		.loc 1 512 15 is_stmt 0 view .LVU329
 1039 039e 2B68     		ldr	r3, [r5]
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1040              		.loc 1 512 52 view .LVU330
 1041 03a0 3342     		tst	r3, r6
 1042 03a2 00D1     		bne	.LCB902
 1043 03a4 60E6     		b	.L77	@long jump
 1044              	.LCB902:
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1045              		.loc 1 514 11 is_stmt 1 view .LVU331
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1046              		.loc 1 514 15 is_stmt 0 view .LVU332
 1047 03a6 FFF7FEFF 		bl	HAL_GetTick
 1048              	.LVL72:
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1049              		.loc 1 514 29 view .LVU333
 1050 03aa 001B     		subs	r0, r0, r4
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1051              		.loc 1 514 13 view .LVU334
 1052 03ac 0228     		cmp	r0, #2
 1053 03ae F6D9     		bls	.L78
 1054 03b0 87E6     		b	.L23
 1055              	.L113:
 1056 03b2 C046     		.align	2
 1057              	.L112:
 1058 03b4 00100240 		.word	1073876992
 1059 03b8 FFFFFFFE 		.word	-16777217
 1060 03bc FFFFC2FF 		.word	-3997697
 1061              		.cfi_endproc
 1062              	.LFE41:
 1064              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1065              		.align	1
 1066              		.global	HAL_RCC_ClockConfig
 1067              		.syntax unified
 1068              		.code	16
 1069              		.thumb_func
 1070              		.fpu softvfp
 1072              	HAL_RCC_ClockConfig:
 1073              	.LVL73:
 1074              	.LFB42:
 529:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 530:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 531:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 532:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 533:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 534:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 535:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  FLatency FLASH Latency                   
 536:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          The value of this parameter depend on device used within the same series
 537:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 538:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 539:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
 540:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 541:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 542:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 543:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 544:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *           
 545:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 546:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 547:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 548:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         occur when the clock source will be ready. 
 549:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 550:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         currently used as system clock source.
 551:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
 552:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 553:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1075              		.loc 1 554 1 is_stmt 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 555:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1079              		.loc 1 555 3 view .LVU336
 556:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 557:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 558:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_ClkInitStruct != NULL);
 1080              		.loc 1 558 3 view .LVU337
 559:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1081              		.loc 1 559 3 view .LVU338
 560:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1082              		.loc 1 560 3 view .LVU339
 561:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 562:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 563:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   must be correctly programmed according to the frequency of the CPU clock 
 564:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     (HCLK) of the device. */
 565:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 566:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 567:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1083              		.loc 1 567 3 view .LVU340
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1084              		.loc 1 554 1 is_stmt 0 view .LVU341
 1085 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1086              	.LCFI2:
 1087              		.cfi_def_cfa_offset 32
 1088              		.cfi_offset 0, -32
 1089              		.cfi_offset 1, -28
 1090              		.cfi_offset 2, -24
 1091              		.cfi_offset 4, -20
 1092              		.cfi_offset 5, -16
 1093              		.cfi_offset 6, -12
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096              		.loc 1 567 29 view .LVU342
 1097 0002 0122     		movs	r2, #1
 1098              		.loc 1 567 23 view .LVU343
 1099 0004 3E4D     		ldr	r5, .L155
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1100              		.loc 1 554 1 view .LVU344
 1101 0006 0400     		movs	r4, r0
 1102              		.loc 1 567 23 view .LVU345
 1103 0008 2B68     		ldr	r3, [r5]
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1104              		.loc 1 554 1 view .LVU346
 1105 000a 0F00     		movs	r7, r1
 1106              		.loc 1 567 29 view .LVU347
 1107 000c 1340     		ands	r3, r2
 1108              		.loc 1 567 5 view .LVU348
 1109 000e 8B42     		cmp	r3, r1
 1110 0010 12D3     		bcc	.L115
 1111              	.L118:
 568:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 569:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 571:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 572:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 573:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 575:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 577:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 578:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 579:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 580:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 581:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1112              		.loc 1 581 3 is_stmt 1 view .LVU349
 1113              		.loc 1 581 25 is_stmt 0 view .LVU350
 1114 0012 2268     		ldr	r2, [r4]
 1115              		.loc 1 581 5 view .LVU351
 1116 0014 9307     		lsls	r3, r2, #30
 1117 0016 19D4     		bmi	.L116
 1118              	.LVL74:
 1119              	.L117:
 582:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 585:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 586:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 587:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 588:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1120              		.loc 1 588 3 is_stmt 1 view .LVU352
 1121              		.loc 1 588 5 is_stmt 0 view .LVU353
 1122 0018 D207     		lsls	r2, r2, #31
 1123 001a 1FD4     		bmi	.L120
 1124              	.LVL75:
 1125              	.L130:
 589:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 591:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 592:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 594:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 595:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSE ready flag */  
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 597:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 598:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 599:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 600:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 601:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 603:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 604:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the PLL ready flag */  
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 606:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 607:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 608:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 609:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 610:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 611:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI48 is selected as System Clock Source */
 612:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 613:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 614:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 ready flag */
 615:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 616:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 617:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 618:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 619:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 620:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 621:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 622:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 623:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 624:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI ready flag */  
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 626:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 627:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 628:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 629:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 631:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 632:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get Start Tick */
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 634:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 636:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 638:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 640:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 642:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 643:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 644:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 646:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 648:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 650:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 652:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 653:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 654:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 655:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 656:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 657:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 658:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 659:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 660:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 661:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 662:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 663:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 664:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 665:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 666:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 667:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 668:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 670:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 672:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 673:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 674:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 675:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 676:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }      
 677:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 678:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 679:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1126              		.loc 1 679 3 is_stmt 1 view .LVU354
 1127              		.loc 1 679 29 is_stmt 0 view .LVU355
 1128 001c 0123     		movs	r3, #1
 1129              		.loc 1 679 23 view .LVU356
 1130 001e 2A68     		ldr	r2, [r5]
 1131              		.loc 1 679 29 view .LVU357
 1132 0020 1A40     		ands	r2, r3
 1133              		.loc 1 679 5 view .LVU358
 1134 0022 BA42     		cmp	r2, r7
 1135 0024 5DD8     		bhi	.L121
 1136              	.L122:
 680:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 681:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 683:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 684:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 685:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 687:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 688:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 689:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 690:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 691:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 692:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 693:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1137              		.loc 1 693 3 is_stmt 1 view .LVU359
 1138              		.loc 1 693 38 is_stmt 0 view .LVU360
 1139 0026 2368     		ldr	r3, [r4]
 1140              		.loc 1 693 5 view .LVU361
 1141 0028 5B07     		lsls	r3, r3, #29
 1142 002a 61D4     		bmi	.L136
 1143              	.L137:
 694:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 697:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 698:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 699:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 700:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   SystemCoreClock = 7372800;
 1144              		.loc 1 701 3 is_stmt 1 view .LVU362
 1145              		.loc 1 701 19 is_stmt 0 view .LVU363
 1146 002c E122     		movs	r2, #225
 1147 002e 354B     		ldr	r3, .L155+4
 1148 0030 D203     		lsls	r2, r2, #15
 702:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 703:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 704:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 705:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 706:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1149              		.loc 1 706 10 view .LVU364
 1150 0032 0020     		movs	r0, #0
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1151              		.loc 1 701 19 view .LVU365
 1152 0034 1A60     		str	r2, [r3]
 1153              		.loc 1 706 3 is_stmt 1 view .LVU366
 1154              		.loc 1 706 10 is_stmt 0 view .LVU367
 1155 0036 08E0     		b	.L119
 1156              	.LVL76:
 1157              	.L115:
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1158              		.loc 1 570 5 is_stmt 1 view .LVU368
 1159 0038 2B68     		ldr	r3, [r5]
 1160 003a 9343     		bics	r3, r2
 1161 003c 0B43     		orrs	r3, r1
 1162 003e 2B60     		str	r3, [r5]
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1163              		.loc 1 574 5 view .LVU369
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1164              		.loc 1 574 14 is_stmt 0 view .LVU370
 1165 0040 2B68     		ldr	r3, [r5]
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1166              		.loc 1 574 20 view .LVU371
 1167 0042 1340     		ands	r3, r2
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1168              		.loc 1 574 7 view .LVU372
 1169 0044 8B42     		cmp	r3, r1
 1170 0046 E4D0     		beq	.L118
 1171              	.LVL77:
 1172              	.L124:
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1173              		.loc 1 576 14 view .LVU373
 1174 0048 0120     		movs	r0, #1
 1175              	.L119:
 707:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1176              		.loc 1 707 1 view .LVU374
 1177              		@ sp needed
 1178              	.LVL78:
 1179              	.LVL79:
 1180              		.loc 1 707 1 view .LVU375
 1181 004a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1182              	.LVL80:
 1183              	.L116:
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1184              		.loc 1 583 5 is_stmt 1 view .LVU376
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1185              		.loc 1 584 5 view .LVU377
 1186 004c F020     		movs	r0, #240
 1187              	.LVL81:
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1188              		.loc 1 584 5 is_stmt 0 view .LVU378
 1189 004e 2E49     		ldr	r1, .L155+8
 1190              	.LVL82:
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1191              		.loc 1 584 5 view .LVU379
 1192 0050 4B68     		ldr	r3, [r1, #4]
 1193 0052 8343     		bics	r3, r0
 1194 0054 A068     		ldr	r0, [r4, #8]
 1195 0056 0343     		orrs	r3, r0
 1196 0058 4B60     		str	r3, [r1, #4]
 1197 005a DDE7     		b	.L117
 1198              	.L120:
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1199              		.loc 1 590 5 is_stmt 1 view .LVU380
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1200              		.loc 1 593 5 view .LVU381
 1201 005c 2A4E     		ldr	r6, .L155+8
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1202              		.loc 1 593 25 is_stmt 0 view .LVU382
 1203 005e 6268     		ldr	r2, [r4, #4]
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1204              		.loc 1 596 10 view .LVU383
 1205 0060 3368     		ldr	r3, [r6]
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1206              		.loc 1 593 7 view .LVU384
 1207 0062 012A     		cmp	r2, #1
 1208 0064 1AD1     		bne	.L123
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1209              		.loc 1 596 7 is_stmt 1 view .LVU385
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1210              		.loc 1 596 9 is_stmt 0 view .LVU386
 1211 0066 9B03     		lsls	r3, r3, #14
 1212 0068 EED5     		bpl	.L124
 1213              	.L125:
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1214              		.loc 1 630 5 is_stmt 1 view .LVU387
 1215 006a 0321     		movs	r1, #3
 1216 006c 7368     		ldr	r3, [r6, #4]
 1217 006e 8B43     		bics	r3, r1
 1218 0070 1343     		orrs	r3, r2
 1219 0072 7360     		str	r3, [r6, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1220              		.loc 1 633 5 view .LVU388
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1221              		.loc 1 633 17 is_stmt 0 view .LVU389
 1222 0074 FFF7FEFF 		bl	HAL_GetTick
 1223              	.LVL83:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1224              		.loc 1 635 25 view .LVU390
 1225 0078 6368     		ldr	r3, [r4, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1226              		.loc 1 633 17 view .LVU391
 1227 007a 0190     		str	r0, [sp, #4]
 1228              	.LVL84:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1229              		.loc 1 635 5 is_stmt 1 view .LVU392
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1230              		.loc 1 635 7 is_stmt 0 view .LVU393
 1231 007c 012B     		cmp	r3, #1
 1232 007e 15D1     		bne	.L150
 1233              	.LVL85:
 1234              	.L127:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1235              		.loc 1 637 44 is_stmt 1 view .LVU394
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1236              		.loc 1 637 14 is_stmt 0 view .LVU395
 1237 0080 0C22     		movs	r2, #12
 1238 0082 7368     		ldr	r3, [r6, #4]
 1239 0084 1340     		ands	r3, r2
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1240              		.loc 1 637 44 view .LVU396
 1241 0086 042B     		cmp	r3, #4
 1242 0088 C8D0     		beq	.L130
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1243              		.loc 1 639 9 is_stmt 1 view .LVU397
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1244              		.loc 1 639 13 is_stmt 0 view .LVU398
 1245 008a FFF7FEFF 		bl	HAL_GetTick
 1246              	.LVL86:
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1247              		.loc 1 639 27 view .LVU399
 1248 008e 019B     		ldr	r3, [sp, #4]
 1249 0090 C01A     		subs	r0, r0, r3
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1250              		.loc 1 639 11 view .LVU400
 1251 0092 1E4B     		ldr	r3, .L155+12
 1252 0094 9842     		cmp	r0, r3
 1253 0096 F3D9     		bls	.L127
 1254              	.L133:
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1255              		.loc 1 641 18 view .LVU401
 1256 0098 0320     		movs	r0, #3
 1257 009a D6E7     		b	.L119
 1258              	.LVL87:
 1259              	.L123:
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1260              		.loc 1 602 10 is_stmt 1 view .LVU402
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1261              		.loc 1 602 12 is_stmt 0 view .LVU403
 1262 009c 022A     		cmp	r2, #2
 1263 009e 02D1     		bne	.L126
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1264              		.loc 1 605 7 is_stmt 1 view .LVU404
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1265              		.loc 1 605 9 is_stmt 0 view .LVU405
 1266 00a0 9B01     		lsls	r3, r3, #6
 1267 00a2 E2D4     		bmi	.L125
 1268 00a4 D0E7     		b	.L124
 1269              	.L126:
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1270              		.loc 1 625 7 is_stmt 1 view .LVU406
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1271              		.loc 1 625 9 is_stmt 0 view .LVU407
 1272 00a6 9B07     		lsls	r3, r3, #30
 1273 00a8 DFD4     		bmi	.L125
 1274 00aa CDE7     		b	.L124
 1275              	.LVL88:
 1276              	.L150:
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1277              		.loc 1 645 10 is_stmt 1 view .LVU408
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1278              		.loc 1 645 12 is_stmt 0 view .LVU409
 1279 00ac 022B     		cmp	r3, #2
 1280 00ae 12D0     		beq	.L131
 1281              	.LVL89:
 1282              	.L132:
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1283              		.loc 1 669 44 is_stmt 1 view .LVU410
 1284 00b0 0C22     		movs	r2, #12
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1285              		.loc 1 669 14 is_stmt 0 view .LVU411
 1286 00b2 7368     		ldr	r3, [r6, #4]
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1287              		.loc 1 669 44 view .LVU412
 1288 00b4 1342     		tst	r3, r2
 1289 00b6 B1D0     		beq	.L130
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1290              		.loc 1 671 9 is_stmt 1 view .LVU413
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1291              		.loc 1 671 13 is_stmt 0 view .LVU414
 1292 00b8 FFF7FEFF 		bl	HAL_GetTick
 1293              	.LVL90:
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1294              		.loc 1 671 27 view .LVU415
 1295 00bc 019B     		ldr	r3, [sp, #4]
 1296 00be C01A     		subs	r0, r0, r3
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1297              		.loc 1 671 11 view .LVU416
 1298 00c0 124B     		ldr	r3, .L155+12
 1299 00c2 9842     		cmp	r0, r3
 1300 00c4 F4D9     		bls	.L132
 1301 00c6 E7E7     		b	.L133
 1302              	.L134:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1303              		.loc 1 649 9 is_stmt 1 view .LVU417
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1304              		.loc 1 649 13 is_stmt 0 view .LVU418
 1305 00c8 FFF7FEFF 		bl	HAL_GetTick
 1306              	.LVL91:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1307              		.loc 1 649 27 view .LVU419
 1308 00cc 019B     		ldr	r3, [sp, #4]
 1309 00ce C01A     		subs	r0, r0, r3
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1310              		.loc 1 649 11 view .LVU420
 1311 00d0 0E4B     		ldr	r3, .L155+12
 1312 00d2 9842     		cmp	r0, r3
 1313 00d4 E0D8     		bhi	.L133
 1314              	.L131:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1315              		.loc 1 647 44 is_stmt 1 view .LVU421
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1316              		.loc 1 647 14 is_stmt 0 view .LVU422
 1317 00d6 0C22     		movs	r2, #12
 1318 00d8 7368     		ldr	r3, [r6, #4]
 1319 00da 1340     		ands	r3, r2
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1320              		.loc 1 647 44 view .LVU423
 1321 00dc 082B     		cmp	r3, #8
 1322 00de F3D1     		bne	.L134
 1323 00e0 9CE7     		b	.L130
 1324              	.LVL92:
 1325              	.L121:
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1326              		.loc 1 682 5 is_stmt 1 view .LVU424
 1327 00e2 2A68     		ldr	r2, [r5]
 1328 00e4 9A43     		bics	r2, r3
 1329 00e6 2A60     		str	r2, [r5]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1330              		.loc 1 686 5 view .LVU425
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1331              		.loc 1 686 14 is_stmt 0 view .LVU426
 1332 00e8 2A68     		ldr	r2, [r5]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1333              		.loc 1 686 7 view .LVU427
 1334 00ea 1A42     		tst	r2, r3
 1335 00ec 9BD0     		beq	.L122
 1336 00ee ABE7     		b	.L124
 1337              	.L136:
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1338              		.loc 1 695 5 is_stmt 1 view .LVU428
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1339              		.loc 1 696 5 view .LVU429
 1340 00f0 054A     		ldr	r2, .L155+8
 1341 00f2 0749     		ldr	r1, .L155+16
 1342 00f4 5368     		ldr	r3, [r2, #4]
 1343 00f6 0B40     		ands	r3, r1
 1344 00f8 E168     		ldr	r1, [r4, #12]
 1345 00fa 0B43     		orrs	r3, r1
 1346 00fc 5360     		str	r3, [r2, #4]
 1347 00fe 95E7     		b	.L137
 1348              	.L156:
 1349              		.align	2
 1350              	.L155:
 1351 0100 00200240 		.word	1073881088
 1352 0104 00000000 		.word	.LANCHOR1
 1353 0108 00100240 		.word	1073876992
 1354 010c 88130000 		.word	5000
 1355 0110 FFF8FFFF 		.word	-1793
 1356              		.cfi_endproc
 1357              	.LFE42:
 1359              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
 1360              		.align	1
 1361              		.global	HAL_RCCEx_PeriphCLKConfig
 1362              		.syntax unified
 1363              		.code	16
 1364              		.thumb_func
 1365              		.fpu softvfp
 1367              	HAL_RCCEx_PeriphCLKConfig:
 1368              	.LVL93:
 1369              	.LFB43:
 708:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 709:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1370              		.loc 1 710 1 view -0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 16
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 711:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1374              		.loc 1 711 3 view .LVU431
 712:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp_reg = 0U;
 1375              		.loc 1 712 3 view .LVU432
 713:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 714:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 715:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 1376              		.loc 1 715 3 view .LVU433
 716:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 717:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*---------------------------- RTC configuration -------------------------------*/
 718:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 1377              		.loc 1 718 3 view .LVU434
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1378              		.loc 1 710 1 is_stmt 0 view .LVU435
 1379 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1380              	.LCFI3:
 1381              		.cfi_def_cfa_offset 20
 1382              		.cfi_offset 4, -20
 1383              		.cfi_offset 5, -16
 1384              		.cfi_offset 6, -12
 1385              		.cfi_offset 7, -8
 1386              		.cfi_offset 14, -4
 1387              		.loc 1 718 45 view .LVU436
 1388 0002 0368     		ldr	r3, [r0]
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1389              		.loc 1 710 1 view .LVU437
 1390 0004 0500     		movs	r5, r0
 1391 0006 85B0     		sub	sp, sp, #20
 1392              	.LCFI4:
 1393              		.cfi_def_cfa_offset 40
 1394              		.loc 1 718 5 view .LVU438
 1395 0008 DB03     		lsls	r3, r3, #15
 1396 000a 2BD5     		bpl	.L159
 1397              	.LBB14:
 719:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 720:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* check for RTC Parameters used to output RTCCLK */
 721:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 1398              		.loc 1 721 5 is_stmt 1 view .LVU439
 722:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 1399              		.loc 1 723 5 view .LVU440
 1400              	.LVL94:
 724:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 725:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* As soon as function is called to change RTC clock source, activation of the 
 726:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        power domain is done. */
 727:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 728:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 1401              		.loc 1 728 5 view .LVU441
 1402              		.loc 1 728 8 is_stmt 0 view .LVU442
 1403 000c 8022     		movs	r2, #128
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1404              		.loc 1 723 22 view .LVU443
 1405 000e 0021     		movs	r1, #0
 1406              		.loc 1 728 8 view .LVU444
 1407 0010 384C     		ldr	r4, .L188
 1408 0012 5205     		lsls	r2, r2, #21
 1409 0014 E369     		ldr	r3, [r4, #28]
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1410              		.loc 1 723 22 view .LVU445
 1411 0016 0091     		str	r1, [sp]
 1412              		.loc 1 728 7 view .LVU446
 1413 0018 1342     		tst	r3, r2
 1414 001a 08D1     		bne	.L160
 729:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 730:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 1415              		.loc 1 730 5 is_stmt 1 view .LVU447
 1416              	.LBB15:
 1417              		.loc 1 730 5 view .LVU448
 1418              		.loc 1 730 5 view .LVU449
 1419 001c E369     		ldr	r3, [r4, #28]
 1420 001e 1343     		orrs	r3, r2
 1421 0020 E361     		str	r3, [r4, #28]
 1422              		.loc 1 730 5 view .LVU450
 1423 0022 E369     		ldr	r3, [r4, #28]
 1424 0024 1340     		ands	r3, r2
 1425 0026 0393     		str	r3, [sp, #12]
 1426              		.loc 1 730 5 view .LVU451
 1427 0028 039B     		ldr	r3, [sp, #12]
 1428              	.LBE15:
 1429              		.loc 1 730 5 view .LVU452
 731:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 1430              		.loc 1 731 7 view .LVU453
 1431              	.LVL95:
 1432              		.loc 1 731 21 is_stmt 0 view .LVU454
 1433 002a 0123     		movs	r3, #1
 1434 002c 0093     		str	r3, [sp]
 1435              	.LVL96:
 1436              	.L160:
 732:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 733:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 734:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1437              		.loc 1 734 5 is_stmt 1 view .LVU455
 1438              		.loc 1 734 8 is_stmt 0 view .LVU456
 1439 002e 8027     		movs	r7, #128
 1440 0030 314E     		ldr	r6, .L188+4
 1441 0032 7F00     		lsls	r7, r7, #1
 1442 0034 3368     		ldr	r3, [r6]
 1443              		.loc 1 734 7 view .LVU457
 1444 0036 3B42     		tst	r3, r7
 1445 0038 29D0     		beq	.L161
 1446              	.LVL97:
 1447              	.L167:
 735:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 736:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 738:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 739:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 741:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 743:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 745:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 747:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 748:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 749:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 750:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 751:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 752:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 1448              		.loc 1 752 5 is_stmt 1 view .LVU458
 1449              		.loc 1 752 20 is_stmt 0 view .LVU459
 1450 003a 216A     		ldr	r1, [r4, #32]
 1451              		.loc 1 752 14 view .LVU460
 1452 003c C022     		movs	r2, #192
 1453 003e 0800     		movs	r0, r1
 1454 0040 9200     		lsls	r2, r2, #2
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 1455              		.loc 1 753 64 view .LVU461
 1456 0042 6B68     		ldr	r3, [r5, #4]
 1457 0044 2D4E     		ldr	r6, .L188+8
 752:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 1458              		.loc 1 752 14 view .LVU462
 1459 0046 1040     		ands	r0, r2
 1460              	.LVL98:
 1461              		.loc 1 753 5 is_stmt 1 view .LVU463
 1462              		.loc 1 753 7 is_stmt 0 view .LVU464
 1463 0048 1142     		tst	r1, r2
 1464 004a 32D1     		bne	.L162
 1465              	.LVL99:
 1466              	.L163:
 754:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 755:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 757:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 760:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       RCC->BDCR = temp_reg;
 762:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 763:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for LSERDY if LSE was enabled */
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 765:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 766:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 768:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 769:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till LSE is ready */  
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 771:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 773:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 774:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 775:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 776:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 777:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 778:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 779:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 1467              		.loc 1 779 5 is_stmt 1 view .LVU465
 1468 004c 236A     		ldr	r3, [r4, #32]
 1469 004e 6A68     		ldr	r2, [r5, #4]
 1470 0050 3340     		ands	r3, r6
 1471 0052 1343     		orrs	r3, r2
 1472 0054 2362     		str	r3, [r4, #32]
 780:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 781:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 782:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 1473              		.loc 1 782 5 view .LVU466
 1474              		.loc 1 782 7 is_stmt 0 view .LVU467
 1475 0056 009B     		ldr	r3, [sp]
 1476 0058 012B     		cmp	r3, #1
 1477 005a 03D1     		bne	.L159
 783:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 784:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1478              		.loc 1 784 7 is_stmt 1 view .LVU468
 1479 005c E369     		ldr	r3, [r4, #28]
 1480 005e 284A     		ldr	r2, .L188+12
 1481 0060 1340     		ands	r3, r2
 1482 0062 E361     		str	r3, [r4, #28]
 1483              	.LVL100:
 1484              	.L159:
 1485              		.loc 1 784 7 is_stmt 0 view .LVU469
 1486              	.LBE14:
 785:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 786:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 787:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 788:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- USART1 Configuration ------------------------*/ 
 789:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 1487              		.loc 1 789 3 is_stmt 1 view .LVU470
 1488              		.loc 1 789 21 is_stmt 0 view .LVU471
 1489 0064 2A68     		ldr	r2, [r5]
 1490              		.loc 1 789 5 view .LVU472
 1491 0066 D307     		lsls	r3, r2, #31
 1492 0068 06D5     		bpl	.L173
 790:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 791:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 792:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 1493              		.loc 1 792 5 is_stmt 1 view .LVU473
 793:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 794:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART1 clock source */
 795:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 1494              		.loc 1 795 5 view .LVU474
 1495 006a 0320     		movs	r0, #3
 1496 006c 2149     		ldr	r1, .L188
 1497 006e 0B6B     		ldr	r3, [r1, #48]
 1498 0070 8343     		bics	r3, r0
 1499 0072 A868     		ldr	r0, [r5, #8]
 1500 0074 0343     		orrs	r3, r0
 1501 0076 0B63     		str	r3, [r1, #48]
 1502              	.L173:
 796:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 797:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 798:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 799:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 800:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART2 Configuration --------------------------*/ 
 801:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 802:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 803:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 804:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 805:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 806:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART2 clock source */
 807:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 808:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 809:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 810:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 811:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 812:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F091xC) || defined(STM32F098xx)
 813:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART3 Configuration --------------------------*/ 
 814:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 815:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 816:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 817:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 818:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 819:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART3 clock source */
 820:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 821:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 822:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F091xC || STM32F098xx */  
 823:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 824:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ I2C1 Configuration ------------------------*/ 
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 1503              		.loc 1 825 3 view .LVU475
 826:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 827:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 829:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 830:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the I2C1 clock source */
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 832:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 833:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 834:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 835:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ USB Configuration ------------------------*/ 
 836:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 837:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 838:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 839:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 840:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 841:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USB clock source */
 842:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 843:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 844:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB || STM32F070x6 */
 845:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 846:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx)\
 847:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F051x8) || defined(STM32F058xx)\
 848:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 849:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 850:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ CEC clock Configuration -------------------*/ 
 851:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 852:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 853:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 854:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 855:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 856:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the CEC clock source */
 857:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 858:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 859:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx ||                */
 860:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F051x8 || STM32F058xx ||                */
 861:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F071xB || STM32F072xB || STM32F078xx || */
 862:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 863:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 864:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1504              		.loc 1 864 10 is_stmt 0 view .LVU476
 1505 0078 0020     		movs	r0, #0
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 1506              		.loc 1 825 5 view .LVU477
 1507 007a 9206     		lsls	r2, r2, #26
 1508 007c 17D5     		bpl	.L165
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1509              		.loc 1 828 5 is_stmt 1 view .LVU478
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1510              		.loc 1 831 5 view .LVU479
 1511 007e 1021     		movs	r1, #16
 1512 0080 1C4A     		ldr	r2, .L188
 1513 0082 136B     		ldr	r3, [r2, #48]
 1514 0084 8B43     		bics	r3, r1
 1515 0086 E968     		ldr	r1, [r5, #12]
 1516 0088 0B43     		orrs	r3, r1
 1517 008a 1363     		str	r3, [r2, #48]
 1518 008c 0FE0     		b	.L165
 1519              	.LVL101:
 1520              	.L161:
 1521              	.LBB16:
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1522              		.loc 1 737 7 view .LVU480
 1523 008e 3368     		ldr	r3, [r6]
 1524 0090 3B43     		orrs	r3, r7
 1525 0092 3360     		str	r3, [r6]
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1526              		.loc 1 740 7 view .LVU481
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1527              		.loc 1 740 19 is_stmt 0 view .LVU482
 1528 0094 FFF7FEFF 		bl	HAL_GetTick
 1529              	.LVL102:
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1530              		.loc 1 740 19 view .LVU483
 1531 0098 0190     		str	r0, [sp, #4]
 1532              	.LVL103:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1533              		.loc 1 742 7 is_stmt 1 view .LVU484
 1534              	.L164:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1535              		.loc 1 742 13 view .LVU485
 1536 009a 3368     		ldr	r3, [r6]
 1537 009c 3B42     		tst	r3, r7
 1538 009e CCD1     		bne	.L167
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1539              		.loc 1 744 9 view .LVU486
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1540              		.loc 1 744 13 is_stmt 0 view .LVU487
 1541 00a0 FFF7FEFF 		bl	HAL_GetTick
 1542              	.LVL104:
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1543              		.loc 1 744 27 view .LVU488
 1544 00a4 019B     		ldr	r3, [sp, #4]
 1545 00a6 C01A     		subs	r0, r0, r3
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1546              		.loc 1 744 11 view .LVU489
 1547 00a8 6428     		cmp	r0, #100
 1548 00aa F6D9     		bls	.L164
 1549              	.LVL105:
 1550              	.L171:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1551              		.loc 1 746 18 view .LVU490
 1552 00ac 0320     		movs	r0, #3
 1553              	.LVL106:
 1554              	.L165:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1555              		.loc 1 746 18 view .LVU491
 1556              	.LBE16:
 865:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1557              		.loc 1 865 1 view .LVU492
 1558 00ae 05B0     		add	sp, sp, #20
 1559              		@ sp needed
 1560              	.LVL107:
 1561              		.loc 1 865 1 view .LVU493
 1562 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1563              	.LVL108:
 1564              	.L162:
 1565              	.LBB17:
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1566              		.loc 1 753 84 discriminator 1 view .LVU494
 1567 00b2 1340     		ands	r3, r2
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1568              		.loc 1 753 34 discriminator 1 view .LVU495
 1569 00b4 8342     		cmp	r3, r0
 1570 00b6 C9D0     		beq	.L163
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1571              		.loc 1 756 7 is_stmt 1 view .LVU496
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1572              		.loc 1 758 7 is_stmt 0 view .LVU497
 1573 00b8 8022     		movs	r2, #128
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1574              		.loc 1 756 22 view .LVU498
 1575 00ba 236A     		ldr	r3, [r4, #32]
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1576              		.loc 1 758 7 view .LVU499
 1577 00bc 206A     		ldr	r0, [r4, #32]
 1578              	.LVL109:
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1579              		.loc 1 756 16 view .LVU500
 1580 00be 1900     		movs	r1, r3
 1581              	.LVL110:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1582              		.loc 1 758 7 view .LVU501
 1583 00c0 5202     		lsls	r2, r2, #9
 1584 00c2 0243     		orrs	r2, r0
 1585 00c4 2262     		str	r2, [r4, #32]
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 1586              		.loc 1 759 7 view .LVU502
 1587 00c6 226A     		ldr	r2, [r4, #32]
 1588 00c8 0E48     		ldr	r0, .L188+16
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1589              		.loc 1 756 16 view .LVU503
 1590 00ca 3140     		ands	r1, r6
 1591              	.LVL111:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1592              		.loc 1 758 7 is_stmt 1 view .LVU504
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 1593              		.loc 1 759 7 view .LVU505
 1594 00cc 0240     		ands	r2, r0
 1595 00ce 2262     		str	r2, [r4, #32]
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1596              		.loc 1 761 7 view .LVU506
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1597              		.loc 1 761 17 is_stmt 0 view .LVU507
 1598 00d0 2162     		str	r1, [r4, #32]
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1599              		.loc 1 764 7 is_stmt 1 view .LVU508
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1600              		.loc 1 764 10 is_stmt 0 view .LVU509
 1601 00d2 DB07     		lsls	r3, r3, #31
 1602 00d4 BAD5     		bpl	.L163
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1603              		.loc 1 767 9 is_stmt 1 view .LVU510
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1604              		.loc 1 767 21 is_stmt 0 view .LVU511
 1605 00d6 FFF7FEFF 		bl	HAL_GetTick
 1606              	.LVL112:
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1607              		.loc 1 767 21 view .LVU512
 1608 00da 0700     		movs	r7, r0
 1609              	.LVL113:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1610              		.loc 1 770 9 is_stmt 1 view .LVU513
 1611              	.L170:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1612              		.loc 1 770 51 view .LVU514
 1613 00dc 0222     		movs	r2, #2
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1614              		.loc 1 770 15 is_stmt 0 view .LVU515
 1615 00de 236A     		ldr	r3, [r4, #32]
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1616              		.loc 1 770 51 view .LVU516
 1617 00e0 1342     		tst	r3, r2
 1618 00e2 B3D1     		bne	.L163
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1619              		.loc 1 772 11 is_stmt 1 view .LVU517
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1620              		.loc 1 772 15 is_stmt 0 view .LVU518
 1621 00e4 FFF7FEFF 		bl	HAL_GetTick
 1622              	.LVL114:
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1623              		.loc 1 772 13 view .LVU519
 1624 00e8 074B     		ldr	r3, .L188+20
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1625              		.loc 1 772 29 view .LVU520
 1626 00ea C01B     		subs	r0, r0, r7
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1627              		.loc 1 772 13 view .LVU521
 1628 00ec 9842     		cmp	r0, r3
 1629 00ee F5D9     		bls	.L170
 1630 00f0 DCE7     		b	.L171
 1631              	.L189:
 1632 00f2 C046     		.align	2
 1633              	.L188:
 1634 00f4 00100240 		.word	1073876992
 1635 00f8 00700040 		.word	1073770496
 1636 00fc FFFCFFFF 		.word	-769
 1637 0100 FFFFFFEF 		.word	-268435457
 1638 0104 FFFFFEFF 		.word	-65537
 1639 0108 88130000 		.word	5000
 1640              	.LBE17:
 1641              		.cfi_endproc
 1642              	.LFE43:
 1644              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 1645              		.align	1
 1646              		.global	HAL_GPIO_Init
 1647              		.syntax unified
 1648              		.code	16
 1649              		.thumb_func
 1650              		.fpu softvfp
 1652              	HAL_GPIO_Init:
 1653              	.LVL115:
 1654              	.LFB44:
 866:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 867:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 868:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 869:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE             (0x00000003U)
 870:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define EXTI_MODE             (0x10000000U)
 871:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_IT          (0x00010000U)
 872:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_EVT         (0x00020000U)
 873:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define RISING_EDGE           (0x00100000U)
 874:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define FALLING_EDGE          (0x00200000U)
 875:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 876:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 877:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_NUMBER           (16U)
 878:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 879:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_GPIOA_CLK_ENABLE()   do { \
 880:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 881:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 882:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 883:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 884:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 885:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 886:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_USART1_CLK_ENABLE()   do { \
 887:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 888:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 889:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 890:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 891:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 892:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 893:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 894:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 895:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 896:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 897:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 898:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 899:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
 900:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 901:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** { 
 1655              		.loc 1 902 1 is_stmt 1 view -0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 24
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 1659              		.loc 1 903 3 view .LVU523
 904:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1660              		.loc 1 904 3 view .LVU524
 905:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 1661              		.loc 1 905 3 view .LVU525
 906:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 907:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 908:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 1662              		.loc 1 908 3 view .LVU526
 909:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 1663              		.loc 1 909 3 view .LVU527
 910:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 1664              		.loc 1 910 3 view .LVU528
 911:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull)); 
 1665              		.loc 1 911 3 view .LVU529
 912:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 913:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the port pins */
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
 1666              		.loc 1 914 3 view .LVU530
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1667              		.loc 1 903 12 is_stmt 0 view .LVU531
 1668 0000 0023     		movs	r3, #0
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 1669              		.loc 1 902 1 view .LVU532
 1670 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1671              	.LCFI5:
 1672              		.cfi_def_cfa_offset 20
 1673              		.cfi_offset 4, -20
 1674              		.cfi_offset 5, -16
 1675              		.cfi_offset 6, -12
 1676              		.cfi_offset 7, -8
 1677              		.cfi_offset 14, -4
 1678 0004 87B0     		sub	sp, sp, #28
 1679              	.LCFI6:
 1680              		.cfi_def_cfa_offset 48
 1681              	.LVL116:
 1682              	.L191:
 1683              		.loc 1 914 41 is_stmt 1 view .LVU533
 1684              		.loc 1 914 21 is_stmt 0 view .LVU534
 1685 0006 0A68     		ldr	r2, [r1]
 1686              		.loc 1 914 28 view .LVU535
 1687 0008 1400     		movs	r4, r2
 1688 000a DC40     		lsrs	r4, r4, r3
 1689              		.loc 1 914 41 view .LVU536
 1690 000c 01D1     		bne	.L206
 915:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 916:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get current io position */
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 918:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(iocurrent)
 920:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 921:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 922:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 924:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 925:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Alternate function parameters */
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 928:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 929:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */ 
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3];
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 934:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 935:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 936:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->MODER;
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 941:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 942:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 944:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 945:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 946:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Speed parameter */
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 948:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR; 
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 953:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 954:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Output Type */
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 959:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 960:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 961:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 966:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 967:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 968:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 970:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 971:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 973:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2];
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 978:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 979:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->IMR;
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 983:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 985:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->IMR = temp;
 987:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->EMR;
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 991:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 993:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->EMR = temp;
 995:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 996:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->RTSR;
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
1000:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1002:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->RTSR = temp;
1004:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->FTSR;
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
1008:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1010:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->FTSR = temp;
1012:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1013:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1014:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     position++;
1016:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
1017:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1691              		.loc 1 1017 1 view .LVU537
 1692 000e 07B0     		add	sp, sp, #28
 1693              		@ sp needed
 1694 0010 F0BD     		pop	{r4, r5, r6, r7, pc}
 1695              	.L206:
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1696              		.loc 1 917 5 is_stmt 1 view .LVU538
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1697              		.loc 1 917 40 is_stmt 0 view .LVU539
 1698 0012 0126     		movs	r6, #1
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1699              		.loc 1 917 15 view .LVU540
 1700 0014 1400     		movs	r4, r2
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1701              		.loc 1 917 40 view .LVU541
 1702 0016 9E40     		lsls	r6, r6, r3
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1703              		.loc 1 917 15 view .LVU542
 1704 0018 3440     		ands	r4, r6
 1705 001a 0294     		str	r4, [sp, #8]
 1706              	.LVL117:
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1707              		.loc 1 919 5 is_stmt 1 view .LVU543
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1708              		.loc 1 919 7 is_stmt 0 view .LVU544
 1709 001c 3242     		tst	r2, r6
 1710 001e 00D1     		bne	.LCB1534
 1711 0020 92E0     		b	.L193	@long jump
 1712              	.LCB1534:
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1713              		.loc 1 923 7 is_stmt 1 view .LVU545
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1714              		.loc 1 923 20 is_stmt 0 view .LVU546
 1715 0022 4A68     		ldr	r2, [r1, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1716              		.loc 1 923 9 view .LVU547
 1717 0024 1500     		movs	r5, r2
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1718              		.loc 1 923 20 view .LVU548
 1719 0026 0192     		str	r2, [sp, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1720              		.loc 1 923 9 view .LVU549
 1721 0028 1022     		movs	r2, #16
 1722 002a 9543     		bics	r5, r2
 1723 002c 0395     		str	r5, [sp, #12]
 1724 002e 022D     		cmp	r5, #2
 1725 0030 0FD1     		bne	.L194
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 1726              		.loc 1 926 9 is_stmt 1 view .LVU550
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1727              		.loc 1 927 9 view .LVU551
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1728              		.loc 1 930 9 view .LVU552
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1729              		.loc 1 931 9 is_stmt 0 view .LVU553
 1730 0032 0724     		movs	r4, #7
 1731              	.LVL118:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1732              		.loc 1 931 9 view .LVU554
 1733 0034 0F25     		movs	r5, #15
 1734 0036 1C40     		ands	r4, r3
 1735 0038 A400     		lsls	r4, r4, #2
 1736 003a A540     		lsls	r5, r5, r4
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1737              		.loc 1 930 36 view .LVU555
 1738 003c DA08     		lsrs	r2, r3, #3
 1739 003e 9200     		lsls	r2, r2, #2
 1740 0040 8218     		adds	r2, r0, r2
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1741              		.loc 1 930 14 view .LVU556
 1742 0042 176A     		ldr	r7, [r2, #32]
 1743              	.LVL119:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1744              		.loc 1 931 9 is_stmt 1 view .LVU557
 1745 0044 AF43     		bics	r7, r5
 1746              	.LVL120:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1747              		.loc 1 931 9 is_stmt 0 view .LVU558
 1748 0046 BC46     		mov	ip, r7
 1749              	.LVL121:
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1750              		.loc 1 932 9 is_stmt 1 view .LVU559
 1751 0048 0F69     		ldr	r7, [r1, #16]
 1752              	.LVL122:
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1753              		.loc 1 932 9 is_stmt 0 view .LVU560
 1754 004a A740     		lsls	r7, r7, r4
 1755 004c 6446     		mov	r4, ip
 1756 004e 2743     		orrs	r7, r4
 1757              	.LVL123:
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1758              		.loc 1 933 9 is_stmt 1 view .LVU561
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1759              		.loc 1 933 36 is_stmt 0 view .LVU562
 1760 0050 1762     		str	r7, [r2, #32]
 1761              	.LVL124:
 1762              	.L194:
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 1763              		.loc 1 937 7 is_stmt 1 view .LVU563
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1764              		.loc 1 938 7 is_stmt 0 view .LVU564
 1765 0052 0322     		movs	r2, #3
 1766 0054 5C00     		lsls	r4, r3, #1
 1767 0056 A240     		lsls	r2, r2, r4
 1768 0058 D543     		mvns	r5, r2
 1769 005a AC46     		mov	ip, r5
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1770              		.loc 1 939 7 view .LVU565
 1771 005c 0325     		movs	r5, #3
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 1772              		.loc 1 937 12 view .LVU566
 1773 005e 0768     		ldr	r7, [r0]
 1774              	.LVL125:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1775              		.loc 1 938 7 is_stmt 1 view .LVU567
 1776 0060 9743     		bics	r7, r2
 1777              	.LVL126:
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1778              		.loc 1 939 7 view .LVU568
 1779 0062 019A     		ldr	r2, [sp, #4]
 1780 0064 2A40     		ands	r2, r5
 1781 0066 A240     		lsls	r2, r2, r4
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1782              		.loc 1 943 10 is_stmt 0 view .LVU569
 1783 0068 039D     		ldr	r5, [sp, #12]
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1784              		.loc 1 939 7 view .LVU570
 1785 006a 3A43     		orrs	r2, r7
 1786              	.LVL127:
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1787              		.loc 1 940 7 is_stmt 1 view .LVU571
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1788              		.loc 1 943 10 is_stmt 0 view .LVU572
 1789 006c 013D     		subs	r5, r5, #1
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1790              		.loc 1 940 20 view .LVU573
 1791 006e 0260     		str	r2, [r0]
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1792              		.loc 1 943 7 is_stmt 1 view .LVU574
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1793              		.loc 1 943 10 is_stmt 0 view .LVU575
 1794 0070 012D     		cmp	r5, #1
 1795 0072 0DD8     		bhi	.L195
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 1796              		.loc 1 947 9 is_stmt 1 view .LVU576
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1797              		.loc 1 949 9 view .LVU577
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 1798              		.loc 1 950 9 is_stmt 0 view .LVU578
 1799 0074 6246     		mov	r2, ip
 1800              	.LVL128:
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1801              		.loc 1 949 14 view .LVU579
 1802 0076 8568     		ldr	r5, [r0, #8]
 1803              	.LVL129:
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 1804              		.loc 1 950 9 is_stmt 1 view .LVU580
 1805 0078 1540     		ands	r5, r2
 1806              	.LVL130:
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1807              		.loc 1 951 9 view .LVU581
 1808 007a CA68     		ldr	r2, [r1, #12]
 1809 007c A240     		lsls	r2, r2, r4
 1810 007e 2A43     		orrs	r2, r5
 1811              	.LVL131:
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1812              		.loc 1 952 9 view .LVU582
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1813              		.loc 1 952 24 is_stmt 0 view .LVU583
 1814 0080 8260     		str	r2, [r0, #8]
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 1815              		.loc 1 955 9 is_stmt 1 view .LVU584
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1816              		.loc 1 957 9 is_stmt 0 view .LVU585
 1817 0082 019A     		ldr	r2, [sp, #4]
 1818              	.LVL132:
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 1819              		.loc 1 955 14 view .LVU586
 1820 0084 4568     		ldr	r5, [r0, #4]
 1821              	.LVL133:
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1822              		.loc 1 956 9 is_stmt 1 view .LVU587
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1823              		.loc 1 957 9 is_stmt 0 view .LVU588
 1824 0086 1209     		lsrs	r2, r2, #4
 1825 0088 9A40     		lsls	r2, r2, r3
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1826              		.loc 1 956 9 view .LVU589
 1827 008a B543     		bics	r5, r6
 1828              	.LVL134:
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1829              		.loc 1 957 9 is_stmt 1 view .LVU590
 1830 008c 2A43     		orrs	r2, r5
 1831              	.LVL135:
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1832              		.loc 1 958 9 view .LVU591
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1833              		.loc 1 958 23 is_stmt 0 view .LVU592
 1834 008e 4260     		str	r2, [r0, #4]
 1835              	.LVL136:
 1836              	.L195:
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 1837              		.loc 1 962 7 is_stmt 1 view .LVU593
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 1838              		.loc 1 963 7 is_stmt 0 view .LVU594
 1839 0090 6246     		mov	r2, ip
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 1840              		.loc 1 962 12 view .LVU595
 1841 0092 C568     		ldr	r5, [r0, #12]
 1842              	.LVL137:
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 1843              		.loc 1 963 7 is_stmt 1 view .LVU596
 1844 0094 1540     		ands	r5, r2
 1845              	.LVL138:
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1846              		.loc 1 964 7 view .LVU597
 1847 0096 8A68     		ldr	r2, [r1, #8]
 1848 0098 A240     		lsls	r2, r2, r4
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1849              		.loc 1 969 9 is_stmt 0 view .LVU598
 1850 009a 8024     		movs	r4, #128
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1851              		.loc 1 964 7 view .LVU599
 1852 009c 2A43     		orrs	r2, r5
 1853              	.LVL139:
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1854              		.loc 1 965 7 is_stmt 1 view .LVU600
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1855              		.loc 1 965 20 is_stmt 0 view .LVU601
 1856 009e C260     		str	r2, [r0, #12]
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1857              		.loc 1 969 7 is_stmt 1 view .LVU602
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1858              		.loc 1 969 9 is_stmt 0 view .LVU603
 1859 00a0 019A     		ldr	r2, [sp, #4]
 1860              	.LVL140:
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1861              		.loc 1 969 9 view .LVU604
 1862 00a2 6405     		lsls	r4, r4, #21
 1863 00a4 2242     		tst	r2, r4
 1864 00a6 4FD0     		beq	.L193
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1865              		.loc 1 972 9 is_stmt 1 view .LVU605
 1866              	.LBB18:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1867              		.loc 1 972 9 view .LVU606
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1868              		.loc 1 972 9 view .LVU607
 1869 00a8 0125     		movs	r5, #1
 1870 00aa 284A     		ldr	r2, .L218
 1871              	.LBE18:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1872              		.loc 1 976 9 is_stmt 0 view .LVU608
 1873 00ac 9027     		movs	r7, #144
 1874              	.LBB19:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1875              		.loc 1 972 9 view .LVU609
 1876 00ae 9469     		ldr	r4, [r2, #24]
 1877              	.LBE19:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1878              		.loc 1 976 9 view .LVU610
 1879 00b0 FF05     		lsls	r7, r7, #23
 1880              	.LBB20:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1881              		.loc 1 972 9 view .LVU611
 1882 00b2 2C43     		orrs	r4, r5
 1883 00b4 9461     		str	r4, [r2, #24]
 1884              	.LVL141:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1885              		.loc 1 972 9 is_stmt 1 view .LVU612
 1886 00b6 9269     		ldr	r2, [r2, #24]
 1887              	.LBE20:
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1888              		.loc 1 974 40 is_stmt 0 view .LVU613
 1889 00b8 9C08     		lsrs	r4, r3, #2
 1890              	.LBB21:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1891              		.loc 1 972 9 view .LVU614
 1892 00ba 2A40     		ands	r2, r5
 1893 00bc 0592     		str	r2, [sp, #20]
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1894              		.loc 1 972 9 is_stmt 1 view .LVU615
 1895 00be 059A     		ldr	r2, [sp, #20]
 1896              	.LBE21:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1897              		.loc 1 972 9 view .LVU616
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1898              		.loc 1 974 9 view .LVU617
 1899 00c0 234A     		ldr	r2, .L218+4
 1900 00c2 A400     		lsls	r4, r4, #2
 1901 00c4 A418     		adds	r4, r4, r2
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1902              		.loc 1 975 9 is_stmt 0 view .LVU618
 1903 00c6 0F22     		movs	r2, #15
 1904 00c8 0235     		adds	r5, r5, #2
 1905 00ca 1D40     		ands	r5, r3
 1906 00cc AD00     		lsls	r5, r5, #2
 1907 00ce AA40     		lsls	r2, r2, r5
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1908              		.loc 1 974 14 view .LVU619
 1909 00d0 A668     		ldr	r6, [r4, #8]
 1910              	.LVL142:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1911              		.loc 1 975 9 is_stmt 1 view .LVU620
 1912 00d2 9643     		bics	r6, r2
 1913              	.LVL143:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1914              		.loc 1 976 9 view .LVU621
 1915 00d4 0022     		movs	r2, #0
 1916 00d6 B842     		cmp	r0, r7
 1917 00d8 0CD0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1918              		.loc 1 976 9 is_stmt 0 discriminator 1 view .LVU622
 1919 00da 1E4F     		ldr	r7, .L218+8
 1920 00dc 0132     		adds	r2, r2, #1
 1921 00de B842     		cmp	r0, r7
 1922 00e0 08D0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1923              		.loc 1 976 9 discriminator 3 view .LVU623
 1924 00e2 1D4F     		ldr	r7, .L218+12
 1925 00e4 0132     		adds	r2, r2, #1
 1926 00e6 B842     		cmp	r0, r7
 1927 00e8 04D0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1928              		.loc 1 976 9 discriminator 5 view .LVU624
 1929 00ea 1C4F     		ldr	r7, .L218+16
 1930 00ec 0132     		adds	r2, r2, #1
 1931 00ee B842     		cmp	r0, r7
 1932 00f0 00D0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1933              		.loc 1 976 9 view .LVU625
 1934 00f2 0232     		adds	r2, r2, #2
 1935              	.L197:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1936              		.loc 1 976 9 discriminator 16 view .LVU626
 1937 00f4 AA40     		lsls	r2, r2, r5
 1938 00f6 3243     		orrs	r2, r6
 1939              	.LVL144:
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 1940              		.loc 1 977 9 is_stmt 1 discriminator 16 view .LVU627
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 1941              		.loc 1 977 39 is_stmt 0 discriminator 16 view .LVU628
 1942 00f8 A260     		str	r2, [r4, #8]
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1943              		.loc 1 980 9 is_stmt 1 discriminator 16 view .LVU629
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1944              		.loc 1 980 14 is_stmt 0 discriminator 16 view .LVU630
 1945 00fa 194A     		ldr	r2, .L218+20
 1946              	.LVL145:
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1947              		.loc 1 981 9 discriminator 16 view .LVU631
 1948 00fc 029C     		ldr	r4, [sp, #8]
 1949              	.LVL146:
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1950              		.loc 1 980 14 discriminator 16 view .LVU632
 1951 00fe 1668     		ldr	r6, [r2]
 1952              	.LVL147:
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1953              		.loc 1 981 9 is_stmt 1 discriminator 16 view .LVU633
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1954              		.loc 1 984 11 is_stmt 0 discriminator 16 view .LVU634
 1955 0100 029D     		ldr	r5, [sp, #8]
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1956              		.loc 1 982 11 discriminator 16 view .LVU635
 1957 0102 019F     		ldr	r7, [sp, #4]
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1958              		.loc 1 981 9 discriminator 16 view .LVU636
 1959 0104 E443     		mvns	r4, r4
 1960              	.LVL148:
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1961              		.loc 1 982 9 is_stmt 1 discriminator 16 view .LVU637
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1962              		.loc 1 984 11 is_stmt 0 discriminator 16 view .LVU638
 1963 0106 3543     		orrs	r5, r6
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1964              		.loc 1 982 11 discriminator 16 view .LVU639
 1965 0108 FF03     		lsls	r7, r7, #15
 1966 010a 01D4     		bmi	.L199
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1967              		.loc 1 981 9 view .LVU640
 1968 010c 3500     		movs	r5, r6
 1969 010e 2540     		ands	r5, r4
 1970              	.LVL149:
 1971              	.L199:
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1972              		.loc 1 986 9 is_stmt 1 view .LVU641
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1973              		.loc 1 986 19 is_stmt 0 view .LVU642
 1974 0110 1560     		str	r5, [r2]
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 1975              		.loc 1 988 9 is_stmt 1 view .LVU643
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 1976              		.loc 1 988 14 is_stmt 0 view .LVU644
 1977 0112 5668     		ldr	r6, [r2, #4]
 1978              	.LVL150:
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1979              		.loc 1 989 9 is_stmt 1 view .LVU645
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1980              		.loc 1 990 9 view .LVU646
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1981              		.loc 1 992 11 is_stmt 0 view .LVU647
 1982 0114 029D     		ldr	r5, [sp, #8]
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1983              		.loc 1 990 11 view .LVU648
 1984 0116 019F     		ldr	r7, [sp, #4]
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1985              		.loc 1 992 11 view .LVU649
 1986 0118 3543     		orrs	r5, r6
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1987              		.loc 1 990 11 view .LVU650
 1988 011a BF03     		lsls	r7, r7, #14
 1989 011c 01D4     		bmi	.L201
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1990              		.loc 1 989 9 view .LVU651
 1991 011e 3500     		movs	r5, r6
 1992 0120 2540     		ands	r5, r4
 1993              	.LVL151:
 1994              	.L201:
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1995              		.loc 1 994 9 is_stmt 1 view .LVU652
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1996              		.loc 1 994 19 is_stmt 0 view .LVU653
 1997 0122 5560     		str	r5, [r2, #4]
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 1998              		.loc 1 997 9 is_stmt 1 view .LVU654
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 1999              		.loc 1 997 14 is_stmt 0 view .LVU655
 2000 0124 9668     		ldr	r6, [r2, #8]
 2001              	.LVL152:
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2002              		.loc 1 998 9 is_stmt 1 view .LVU656
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2003              		.loc 1 999 9 view .LVU657
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2004              		.loc 1 1001 11 is_stmt 0 view .LVU658
 2005 0126 029D     		ldr	r5, [sp, #8]
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2006              		.loc 1 999 11 view .LVU659
 2007 0128 019F     		ldr	r7, [sp, #4]
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2008              		.loc 1 1001 11 view .LVU660
 2009 012a 3543     		orrs	r5, r6
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2010              		.loc 1 999 11 view .LVU661
 2011 012c FF02     		lsls	r7, r7, #11
 2012 012e 01D4     		bmi	.L203
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2013              		.loc 1 998 9 view .LVU662
 2014 0130 3500     		movs	r5, r6
 2015 0132 2540     		ands	r5, r4
 2016              	.LVL153:
 2017              	.L203:
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2018              		.loc 1 1003 9 is_stmt 1 view .LVU663
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2019              		.loc 1 1003 20 is_stmt 0 view .LVU664
 2020 0134 9560     		str	r5, [r2, #8]
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2021              		.loc 1 1005 9 is_stmt 1 view .LVU665
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2022              		.loc 1 1005 14 is_stmt 0 view .LVU666
 2023 0136 D568     		ldr	r5, [r2, #12]
 2024              	.LVL154:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2025              		.loc 1 1006 9 is_stmt 1 view .LVU667
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2026              		.loc 1 1007 9 view .LVU668
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2027              		.loc 1 1009 11 is_stmt 0 view .LVU669
 2028 0138 029E     		ldr	r6, [sp, #8]
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2029              		.loc 1 1007 11 view .LVU670
 2030 013a 019F     		ldr	r7, [sp, #4]
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2031              		.loc 1 1009 11 view .LVU671
 2032 013c 2E43     		orrs	r6, r5
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2033              		.loc 1 1007 11 view .LVU672
 2034 013e BF02     		lsls	r7, r7, #10
 2035 0140 01D4     		bmi	.L205
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2036              		.loc 1 1006 9 view .LVU673
 2037 0142 2540     		ands	r5, r4
 2038              	.LVL155:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2039              		.loc 1 1006 9 view .LVU674
 2040 0144 2E00     		movs	r6, r5
 2041              	.LVL156:
 2042              	.L205:
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2043              		.loc 1 1011 9 is_stmt 1 view .LVU675
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2044              		.loc 1 1011 20 is_stmt 0 view .LVU676
 2045 0146 D660     		str	r6, [r2, #12]
 2046              	.LVL157:
 2047              	.L193:
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2048              		.loc 1 1015 5 is_stmt 1 view .LVU677
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2049              		.loc 1 1015 13 is_stmt 0 view .LVU678
 2050 0148 0133     		adds	r3, r3, #1
 2051              	.LVL158:
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2052              		.loc 1 1015 13 view .LVU679
 2053 014a 5CE7     		b	.L191
 2054              	.L219:
 2055              		.align	2
 2056              	.L218:
 2057 014c 00100240 		.word	1073876992
 2058 0150 00000140 		.word	1073807360
 2059 0154 00040048 		.word	1207960576
 2060 0158 00080048 		.word	1207961600
 2061 015c 000C0048 		.word	1207962624
 2062 0160 00040140 		.word	1073808384
 2063              		.cfi_endproc
 2064              	.LFE44:
 2066              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 2067              		.align	1
 2068              		.global	HAL_GPIO_WritePin
 2069              		.syntax unified
 2070              		.code	16
 2071              		.thumb_func
 2072              		.fpu softvfp
 2074              	HAL_GPIO_WritePin:
 2075              	.LVL159:
 2076              	.LFB45:
1018:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1019:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1020:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Set or clear the selected data port bit.
1021:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
1022:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
1023:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the read and the modify access.
1024:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
1025:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..H) to select the GPIO peripheral for STM32F0 family
1026:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
1027:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
1028:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
1029:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of the GPIO_PinState enum values:
1030:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
1031:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
1032:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
1033:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1034:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
1035:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2077              		.loc 1 1035 1 is_stmt 1 view -0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
1036:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1037:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 2082              		.loc 1 1037 3 view .LVU681
1038:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 2083              		.loc 1 1038 3 view .LVU682
1039:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1040:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (PinState != GPIO_PIN_RESET)
 2084              		.loc 1 1040 3 view .LVU683
 2085              		.loc 1 1040 6 is_stmt 0 view .LVU684
 2086 0000 002A     		cmp	r2, #0
 2087 0002 01D0     		beq	.L221
1041:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1042:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 2088              		.loc 1 1042 5 is_stmt 1 view .LVU685
 2089              		.loc 1 1042 17 is_stmt 0 view .LVU686
 2090 0004 8161     		str	r1, [r0, #24]
 2091              	.L220:
1043:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1044:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1045:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
1047:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1048:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }										  
 2092              		.loc 1 1048 1 view .LVU687
 2093              		@ sp needed
 2094 0006 7047     		bx	lr
 2095              	.L221:
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2096              		.loc 1 1046 5 is_stmt 1 view .LVU688
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2097              		.loc 1 1046 16 is_stmt 0 view .LVU689
 2098 0008 8162     		str	r1, [r0, #40]
 2099              		.loc 1 1048 1 view .LVU690
 2100 000a FCE7     		b	.L220
 2101              		.cfi_endproc
 2102              	.LFE45:
 2104              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2105              		.align	1
 2106              		.global	UART_WaitOnFlagUntilTimeout
 2107              		.syntax unified
 2108              		.code	16
 2109              		.thumb_func
 2110              		.fpu softvfp
 2112              	UART_WaitOnFlagUntilTimeout:
 2113              	.LVL160:
 2114              	.LFB46:
1049:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1050:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1051:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Handle UART Communication Timeout.
1052:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  huart UART handle.
1053:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Flag Specifies the UART flag to check
1054:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Status Flag status (SET or RESET)
1055:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Tickstart Tick start value
1056:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Timeout Timeout duration
1057:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1058:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1059:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1060:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2115              		.loc 1 1060 1 is_stmt 1 view -0
 2116              		.cfi_startproc
 2117              		@ args = 4, pretend = 0, frame = 8
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		.loc 1 1060 1 is_stmt 0 view .LVU692
 2120 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2121              	.LCFI7:
 2122              		.cfi_def_cfa_offset 32
 2123              		.cfi_offset 0, -32
 2124              		.cfi_offset 1, -28
 2125              		.cfi_offset 2, -24
 2126              		.cfi_offset 4, -20
 2127              		.cfi_offset 5, -16
 2128              		.cfi_offset 6, -12
 2129              		.cfi_offset 7, -8
 2130              		.cfi_offset 14, -4
 2131 0002 0400     		movs	r4, r0
 2132 0004 0E00     		movs	r6, r1
 2133 0006 1700     		movs	r7, r2
 2134 0008 0193     		str	r3, [sp, #4]
1061:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Wait until flag is set */
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 2135              		.loc 1 1062 3 is_stmt 1 view .LVU693
 2136              	.LVL161:
 2137              	.L224:
 2138              		.loc 1 1062 10 is_stmt 0 view .LVU694
 2139 000a 2568     		ldr	r5, [r4]
 2140              	.L225:
 2141              		.loc 1 1062 58 is_stmt 1 view .LVU695
 2142              		.loc 1 1062 10 is_stmt 0 view .LVU696
 2143 000c EB69     		ldr	r3, [r5, #28]
 2144 000e 3340     		ands	r3, r6
 2145              		.loc 1 1062 49 view .LVU697
 2146 0010 9B1B     		subs	r3, r3, r6
 2147 0012 5A42     		rsbs	r2, r3, #0
 2148 0014 5341     		adcs	r3, r3, r2
 2149              		.loc 1 1062 58 view .LVU698
 2150 0016 BB42     		cmp	r3, r7
 2151 0018 01D0     		beq	.L229
1063:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1064:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check for the Timeout */
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(Timeout != HAL_MAX_DELAY)
1066:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
1068:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1069:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1072:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->gState  = HAL_UART_STATE_READY;
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
1075:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1076:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Process Unlocked */
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_UNLOCK(huart);
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1079:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1080:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1081:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1082:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 2152              		.loc 1 1082 10 view .LVU699
 2153 001a 0020     		movs	r0, #0
 2154 001c 17E0     		b	.L227
 2155              	.L229:
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2156              		.loc 1 1065 5 is_stmt 1 view .LVU700
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2157              		.loc 1 1065 7 is_stmt 0 view .LVU701
 2158 001e 089B     		ldr	r3, [sp, #32]
 2159 0020 0133     		adds	r3, r3, #1
 2160 0022 F3D0     		beq	.L225
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2161              		.loc 1 1067 7 is_stmt 1 view .LVU702
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2162              		.loc 1 1067 9 is_stmt 0 view .LVU703
 2163 0024 089B     		ldr	r3, [sp, #32]
 2164 0026 002B     		cmp	r3, #0
 2165 0028 12D1     		bne	.L226
 2166              	.L228:
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2167              		.loc 1 1070 9 is_stmt 1 view .LVU704
 2168 002a 2B68     		ldr	r3, [r5]
 2169 002c 0C4A     		ldr	r2, .L233
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2170              		.loc 1 1078 16 is_stmt 0 view .LVU705
 2171 002e 0320     		movs	r0, #3
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2172              		.loc 1 1070 9 view .LVU706
 2173 0030 1340     		ands	r3, r2
 2174 0032 2B60     		str	r3, [r5]
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2175              		.loc 1 1071 9 is_stmt 1 view .LVU707
 2176 0034 AB68     		ldr	r3, [r5, #8]
 2177 0036 A332     		adds	r2, r2, #163
 2178 0038 FF32     		adds	r2, r2, #255
 2179 003a 9343     		bics	r3, r2
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2180              		.loc 1 1073 24 is_stmt 0 view .LVU708
 2181 003c 2200     		movs	r2, r4
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2182              		.loc 1 1071 9 view .LVU709
 2183 003e AB60     		str	r3, [r5, #8]
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2184              		.loc 1 1073 9 is_stmt 1 view .LVU710
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2185              		.loc 1 1073 24 is_stmt 0 view .LVU711
 2186 0040 2023     		movs	r3, #32
 2187 0042 6932     		adds	r2, r2, #105
 2188 0044 1370     		strb	r3, [r2]
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2189              		.loc 1 1074 9 is_stmt 1 view .LVU712
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2190              		.loc 1 1074 24 is_stmt 0 view .LVU713
 2191 0046 5370     		strb	r3, [r2, #1]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2192              		.loc 1 1077 9 is_stmt 1 view .LVU714
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2193              		.loc 1 1077 9 view .LVU715
 2194 0048 0023     		movs	r3, #0
 2195 004a 6834     		adds	r4, r4, #104
 2196              	.LVL162:
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2197              		.loc 1 1077 9 is_stmt 0 view .LVU716
 2198 004c 2370     		strb	r3, [r4]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2199              		.loc 1 1077 9 is_stmt 1 view .LVU717
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2200              		.loc 1 1078 9 view .LVU718
 2201              	.LVL163:
 2202              	.L227:
1083:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2203              		.loc 1 1083 1 is_stmt 0 view .LVU719
 2204              		@ sp needed
 2205              	.LVL164:
 2206              		.loc 1 1083 1 view .LVU720
 2207 004e FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2208              	.LVL165:
 2209              	.L226:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2210              		.loc 1 1067 31 discriminator 1 view .LVU721
 2211 0050 FFF7FEFF 		bl	HAL_GetTick
 2212              	.LVL166:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2213              		.loc 1 1067 44 discriminator 1 view .LVU722
 2214 0054 019B     		ldr	r3, [sp, #4]
 2215 0056 C01A     		subs	r0, r0, r3
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2216              		.loc 1 1067 26 discriminator 1 view .LVU723
 2217 0058 089B     		ldr	r3, [sp, #32]
 2218 005a 9842     		cmp	r0, r3
 2219 005c D5D9     		bls	.L224
 2220 005e E4E7     		b	.L228
 2221              	.L234:
 2222              		.align	2
 2223              	.L233:
 2224 0060 5FFEFFFF 		.word	-417
 2225              		.cfi_endproc
 2226              	.LFE46:
 2228              		.section	.text.UART_CheckIdleState,"ax",%progbits
 2229              		.align	1
 2230              		.global	UART_CheckIdleState
 2231              		.syntax unified
 2232              		.code	16
 2233              		.thumb_func
 2234              		.fpu softvfp
 2236              	UART_CheckIdleState:
 2237              	.LVL167:
 2238              	.LFB47:
1084:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1085:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1086:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Check the UART Idle State.
1087:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart UART handle.
1088:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1089:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2239              		.loc 1 1091 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
 2243              		@ link register save eliminated.
1092:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1093:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
1094:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1095:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1096:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART ErrorCode */
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2244              		.loc 1 1097 3 view .LVU725
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 2245              		.loc 1 1091 1 is_stmt 0 view .LVU726
 2246 0000 0300     		movs	r3, r0
1098:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1099:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Init tickstart for timeout managment*/
1101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tickstart = HAL_GetTick();
1102:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
1104:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
1105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
1107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Transmitter is enabled */
1109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1110:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until TEACK flag is set */
1112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1118:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Receiver is enabled */
1120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
1121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until REACK flag is set */
1123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1125:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1130:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1131:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART State */
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState  = HAL_UART_STATE_READY;
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
1135:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Process Unlocked */
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UNLOCK(huart);
1138:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
1140:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2247              		.loc 1 1140 1 view .LVU727
 2248              		@ sp needed
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2249              		.loc 1 1097 20 view .LVU728
 2250 0002 0020     		movs	r0, #0
 2251              	.LVL168:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2252              		.loc 1 1133 18 view .LVU729
 2253 0004 1900     		movs	r1, r3
 2254 0006 2022     		movs	r2, #32
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2255              		.loc 1 1097 20 view .LVU730
 2256 0008 D866     		str	r0, [r3, #108]
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2257              		.loc 1 1133 3 is_stmt 1 view .LVU731
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2258              		.loc 1 1133 18 is_stmt 0 view .LVU732
 2259 000a 6931     		adds	r1, r1, #105
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2260              		.loc 1 1137 3 view .LVU733
 2261 000c 6833     		adds	r3, r3, #104
 2262              	.LVL169:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2263              		.loc 1 1133 18 view .LVU734
 2264 000e 0A70     		strb	r2, [r1]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2265              		.loc 1 1134 3 is_stmt 1 view .LVU735
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2266              		.loc 1 1134 18 is_stmt 0 view .LVU736
 2267 0010 4A70     		strb	r2, [r1, #1]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2268              		.loc 1 1137 3 is_stmt 1 view .LVU737
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2269              		.loc 1 1137 3 view .LVU738
 2270 0012 1870     		strb	r0, [r3]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2271              		.loc 1 1137 3 view .LVU739
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2272              		.loc 1 1139 3 view .LVU740
 2273              		.loc 1 1140 1 is_stmt 0 view .LVU741
 2274 0014 7047     		bx	lr
 2275              		.cfi_endproc
 2276              	.LFE47:
 2278              		.global	__aeabi_uidiv
 2279              		.section	.text.UART_SetConfig,"ax",%progbits
 2280              		.align	1
 2281              		.global	UART_SetConfig
 2282              		.syntax unified
 2283              		.code	16
 2284              		.thumb_func
 2285              		.fpu softvfp
 2287              	UART_SetConfig:
 2288              	.LVL170:
 2289              	.LFB48:
1141:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1142:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2290              		.loc 1 1143 1 is_stmt 1 view -0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
1144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2294              		.loc 1 1144 3 view .LVU743
1145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 2295              		.loc 1 1145 3 view .LVU744
1146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t brrtemp                    = 0x0000U;
 2296              		.loc 1 1146 3 view .LVU745
1147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t usartdiv                   = 0x0000U;
 2297              		.loc 1 1147 3 view .LVU746
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2298              		.loc 1 1148 3 view .LVU747
1149:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 2299              		.loc 1 1151 3 view .LVU748
1152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2300              		.loc 1 1152 3 view .LVU749
1153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2301              		.loc 1 1153 3 view .LVU750
1154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2302              		.loc 1 1154 3 view .LVU751
1155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2303              		.loc 1 1155 3 view .LVU752
1156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2304              		.loc 1 1156 3 view .LVU753
1157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2305              		.loc 1 1157 3 view .LVU754
1158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2306              		.loc 1 1158 3 view .LVU755
1159:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1160:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set the M bits according to huart->Init.WordLength value
1165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set TE and RE bits according to huart->Init.Mode value
1167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2307              		.loc 1 1168 3 view .LVU756
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2308              		.loc 1 1143 1 is_stmt 0 view .LVU757
 2309 0000 0300     		movs	r3, r0
 2310 0002 70B5     		push	{r4, r5, r6, lr}
 2311              	.LCFI8:
 2312              		.cfi_def_cfa_offset 16
 2313              		.cfi_offset 4, -16
 2314              		.cfi_offset 5, -12
 2315              		.cfi_offset 6, -8
 2316              		.cfi_offset 14, -4
 2317              		.loc 1 1168 45 view .LVU758
 2318 0004 9A68     		ldr	r2, [r3, #8]
 2319 0006 1D69     		ldr	r5, [r3, #16]
1169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2320              		.loc 1 1169 3 view .LVU759
 2321 0008 0468     		ldr	r4, [r0]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2322              		.loc 1 1168 45 view .LVU760
 2323 000a 2A43     		orrs	r2, r5
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2324              		.loc 1 1168 66 view .LVU761
 2325 000c 5D69     		ldr	r5, [r3, #20]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2326              		.loc 1 1168 98 view .LVU762
 2327 000e C169     		ldr	r1, [r0, #28]
 2328              	.LVL171:
 2329              		.loc 1 1169 3 is_stmt 1 view .LVU763
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2330              		.loc 1 1168 66 is_stmt 0 view .LVU764
 2331 0010 2A43     		orrs	r2, r5
 2332              		.loc 1 1169 3 view .LVU765
 2333 0012 2068     		ldr	r0, [r4]
 2334              	.LVL172:
 2335              		.loc 1 1169 3 view .LVU766
 2336 0014 334D     		ldr	r5, .L256
 2337              	.LVL173:
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2338              		.loc 1 1168 10 view .LVU767
 2339 0016 0A43     		orrs	r2, r1
 2340              		.loc 1 1169 3 view .LVU768
 2341 0018 2840     		ands	r0, r5
 2342 001a 0243     		orrs	r2, r0
 2343 001c 2260     		str	r2, [r4]
1170:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * to huart->Init.StopBits value */
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2344              		.loc 1 1174 3 is_stmt 1 view .LVU769
 2345 001e 6268     		ldr	r2, [r4, #4]
 2346 0020 3148     		ldr	r0, .L256+4
1175:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure
1178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.HwFlowCtl value
1180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - one-bit sampling method versus three samples' majority rule according
1181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.OneBitSampling */
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2347              		.loc 1 1182 10 is_stmt 0 view .LVU770
 2348 0022 1D6A     		ldr	r5, [r3, #32]
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2349              		.loc 1 1174 3 view .LVU771
 2350 0024 0240     		ands	r2, r0
 2351 0026 D868     		ldr	r0, [r3, #12]
 2352 0028 0243     		orrs	r2, r0
 2353 002a 6260     		str	r2, [r4, #4]
 2354              		.loc 1 1182 3 is_stmt 1 view .LVU772
 2355              	.LVL174:
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2356              		.loc 1 1183 3 view .LVU773
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2357              		.loc 1 1182 10 is_stmt 0 view .LVU774
 2358 002c 9A69     		ldr	r2, [r3, #24]
 2359              		.loc 1 1183 3 view .LVU775
 2360 002e A068     		ldr	r0, [r4, #8]
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2361              		.loc 1 1182 10 view .LVU776
 2362 0030 2A43     		orrs	r2, r5
 2363              		.loc 1 1183 3 view .LVU777
 2364 0032 2E4D     		ldr	r5, .L256+8
 2365 0034 2840     		ands	r0, r5
 2366 0036 0243     		orrs	r2, r0
1184:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2367              		.loc 1 1186 3 view .LVU778
 2368 0038 0320     		movs	r0, #3
 2369 003a 8025     		movs	r5, #128
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2370              		.loc 1 1183 3 view .LVU779
 2371 003c A260     		str	r2, [r4, #8]
 2372              		.loc 1 1186 3 is_stmt 1 view .LVU780
 2373              		.loc 1 1186 3 view .LVU781
 2374 003e 2C4A     		ldr	r2, .L256+12
 2375 0040 2D02     		lsls	r5, r5, #8
 2376 0042 126B     		ldr	r2, [r2, #48]
 2377 0044 0240     		ands	r2, r0
 2378 0046 013A     		subs	r2, r2, #1
 2379 0048 022A     		cmp	r2, #2
 2380 004a 43D8     		bhi	.L237
 2381 004c 2948     		ldr	r0, .L256+16
 2382 004e 805C     		ldrb	r0, [r0, r2]
 2383              	.LVL175:
 2384              		.loc 1 1186 3 view .LVU782
1187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
1188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2385              		.loc 1 1189 3 view .LVU783
 2386              		.loc 1 1189 6 is_stmt 0 view .LVU784
 2387 0050 A942     		cmp	r1, r5
 2388 0052 20D1     		bne	.L238
1190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
 2389              		.loc 1 1191 5 is_stmt 1 view .LVU785
 2390 0054 0828     		cmp	r0, #8
 2391 0056 1BD8     		bhi	.L251
 2392 0058 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 2393              	.L241:
 2394 005c 3E       		.byte	(.L242-.L241)/2
 2395 005d 1A       		.byte	(.L251-.L241)/2
 2396 005e 05       		.byte	(.L243-.L241)/2
 2397 005f 1A       		.byte	(.L251-.L241)/2
 2398 0060 3E       		.byte	(.L242-.L241)/2
 2399 0061 1A       		.byte	(.L251-.L241)/2
 2400 0062 1A       		.byte	(.L251-.L241)/2
 2401 0063 1A       		.byte	(.L251-.L241)/2
 2402 0064 15       		.byte	(.L240-.L241)/2
 2403 0065 00       		.p2align 1
 2404              	.L243:
1192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 2405              		.loc 1 1197 9 view .LVU786
 2406              		.loc 1 1197 31 is_stmt 0 view .LVU787
 2407 0066 5968     		ldr	r1, [r3, #4]
 2408 0068 234B     		ldr	r3, .L256+20
 2409              	.LVL176:
 2410              		.loc 1 1197 31 view .LVU788
 2411 006a 4808     		lsrs	r0, r1, #1
 2412              	.LVL177:
 2413              	.L254:
1198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
1201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 2414              		.loc 1 1203 31 view .LVU789
 2415 006c C018     		adds	r0, r0, r3
 2416 006e FFF7FEFF 		bl	__aeabi_uidiv
 2417              	.LVL178:
 2418              		.loc 1 1203 18 view .LVU790
 2419 0072 83B2     		uxth	r3, r0
 2420              	.LVL179:
1204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2421              		.loc 1 1204 9 is_stmt 1 view .LVU791
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2422              		.loc 1 1148 21 is_stmt 0 view .LVU792
 2423 0074 0020     		movs	r0, #0
 2424              	.LVL180:
 2425              	.L239:
1205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1210:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp = usartdiv & 0xFFF0U;
 2426              		.loc 1 1211 5 is_stmt 1 view .LVU793
 2427              		.loc 1 1211 13 is_stmt 0 view .LVU794
 2428 0076 1900     		movs	r1, r3
 2429 0078 0F22     		movs	r2, #15
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2430              		.loc 1 1212 16 view .LVU795
 2431 007a 1B07     		lsls	r3, r3, #28
 2432              	.LVL181:
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2433              		.loc 1 1211 13 view .LVU796
 2434 007c 9143     		bics	r1, r2
 2435              	.LVL182:
 2436              		.loc 1 1212 5 is_stmt 1 view .LVU797
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2437              		.loc 1 1213 5 view .LVU798
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2438              		.loc 1 1212 16 is_stmt 0 view .LVU799
 2439 007e 5B0F     		lsrs	r3, r3, #29
 2440              		.loc 1 1213 26 view .LVU800
 2441 0080 0B43     		orrs	r3, r1
 2442 0082 E360     		str	r3, [r4, #12]
 2443              	.LVL183:
 2444              	.L253:
1214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
1218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
1224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
1227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1237:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return ret;
1239:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1240:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2445              		.loc 1 1240 1 view .LVU801
 2446              		@ sp needed
 2447 0084 70BD     		pop	{r4, r5, r6, pc}
 2448              	.LVL184:
 2449              	.L240:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2450              		.loc 1 1203 9 is_stmt 1 view .LVU802
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2451              		.loc 1 1203 31 is_stmt 0 view .LVU803
 2452 0086 5968     		ldr	r1, [r3, #4]
 2453 0088 8023     		movs	r3, #128
 2454              	.LVL185:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2455              		.loc 1 1203 31 view .LVU804
 2456 008a 4808     		lsrs	r0, r1, #1
 2457              	.LVL186:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2458              		.loc 1 1203 31 view .LVU805
 2459 008c 5B02     		lsls	r3, r3, #9
 2460 008e EDE7     		b	.L254
 2461              	.LVL187:
 2462              	.L251:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2463              		.loc 1 1191 5 view .LVU806
 2464 0090 0120     		movs	r0, #1
 2465              	.LVL188:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2466              		.loc 1 1191 5 view .LVU807
 2467 0092 0023     		movs	r3, #0
 2468              	.LVL189:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2469              		.loc 1 1191 5 view .LVU808
 2470 0094 EFE7     		b	.L239
 2471              	.LVL190:
 2472              	.L238:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2473              		.loc 1 1217 5 is_stmt 1 view .LVU809
 2474 0096 0828     		cmp	r0, #8
 2475 0098 1AD8     		bhi	.L252
 2476 009a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 2477              	.L247:
 2478 009e 0F       		.byte	(.L248-.L247)/2
 2479 009f 19       		.byte	(.L252-.L247)/2
 2480 00a0 05       		.byte	(.L249-.L247)/2
 2481 00a1 19       		.byte	(.L252-.L247)/2
 2482 00a2 0F       		.byte	(.L248-.L247)/2
 2483 00a3 19       		.byte	(.L252-.L247)/2
 2484 00a4 19       		.byte	(.L252-.L247)/2
 2485 00a5 19       		.byte	(.L252-.L247)/2
 2486 00a6 14       		.byte	(.L246-.L247)/2
 2487 00a7 00       		.p2align 1
 2488              	.L249:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2489              		.loc 1 1223 9 view .LVU810
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2490              		.loc 1 1223 43 is_stmt 0 view .LVU811
 2491 00a8 5968     		ldr	r1, [r3, #4]
 2492 00aa 144B     		ldr	r3, .L256+24
 2493              	.LVL191:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2494              		.loc 1 1223 43 view .LVU812
 2495 00ac 4808     		lsrs	r0, r1, #1
 2496              	.LVL192:
 2497              	.L255:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2498              		.loc 1 1229 43 view .LVU813
 2499 00ae C018     		adds	r0, r0, r3
 2500 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 2501              	.LVL193:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2502              		.loc 1 1229 43 view .LVU814
 2503 00b4 80B2     		uxth	r0, r0
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2504              		.loc 1 1229 30 view .LVU815
 2505 00b6 E060     		str	r0, [r4, #12]
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2506              		.loc 1 1230 9 is_stmt 1 view .LVU816
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2507              		.loc 1 1148 21 is_stmt 0 view .LVU817
 2508 00b8 0020     		movs	r0, #0
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2509              		.loc 1 1230 9 view .LVU818
 2510 00ba E3E7     		b	.L253
 2511              	.LVL194:
 2512              	.L248:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2513              		.loc 1 1226 9 is_stmt 1 view .LVU819
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2514              		.loc 1 1226 43 is_stmt 0 view .LVU820
 2515 00bc 5968     		ldr	r1, [r3, #4]
 2516 00be E123     		movs	r3, #225
 2517              	.LVL195:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2518              		.loc 1 1226 43 view .LVU821
 2519 00c0 4808     		lsrs	r0, r1, #1
 2520 00c2 DB03     		lsls	r3, r3, #15
 2521 00c4 F3E7     		b	.L255
 2522              	.LVL196:
 2523              	.L246:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2524              		.loc 1 1229 9 is_stmt 1 view .LVU822
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2525              		.loc 1 1229 43 is_stmt 0 view .LVU823
 2526 00c6 5968     		ldr	r1, [r3, #4]
 2527 00c8 8023     		movs	r3, #128
 2528              	.LVL197:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2529              		.loc 1 1229 43 view .LVU824
 2530 00ca 4808     		lsrs	r0, r1, #1
 2531              	.LVL198:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2532              		.loc 1 1229 43 view .LVU825
 2533 00cc 1B02     		lsls	r3, r3, #8
 2534 00ce EEE7     		b	.L255
 2535              	.LVL199:
 2536              	.L252:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2537              		.loc 1 1217 5 view .LVU826
 2538 00d0 0120     		movs	r0, #1
 2539              	.LVL200:
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2540              		.loc 1 1238 3 is_stmt 1 view .LVU827
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2541              		.loc 1 1238 10 is_stmt 0 view .LVU828
 2542 00d2 D7E7     		b	.L253
 2543              	.LVL201:
 2544              	.L237:
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2545              		.loc 1 1186 3 is_stmt 1 view .LVU829
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2546              		.loc 1 1189 3 view .LVU830
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2547              		.loc 1 1189 6 is_stmt 0 view .LVU831
 2548 00d4 A942     		cmp	r1, r5
 2549 00d6 F1D1     		bne	.L248
 2550              	.LVL202:
 2551              	.L242:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2552              		.loc 1 1200 9 is_stmt 1 view .LVU832
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2553              		.loc 1 1200 31 is_stmt 0 view .LVU833
 2554 00d8 5968     		ldr	r1, [r3, #4]
 2555 00da E123     		movs	r3, #225
 2556              	.LVL203:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2557              		.loc 1 1200 31 view .LVU834
 2558 00dc 4808     		lsrs	r0, r1, #1
 2559 00de 1B04     		lsls	r3, r3, #16
 2560 00e0 C4E7     		b	.L254
 2561              	.L257:
 2562 00e2 C046     		.align	2
 2563              	.L256:
 2564 00e4 F369FFFF 		.word	-38413
 2565 00e8 FFCFFFFF 		.word	-12289
 2566 00ec FFF4FFFF 		.word	-2817
 2567 00f0 00100240 		.word	1073876992
 2568 00f4 00000000 		.word	.LANCHOR2
 2569 00f8 0048E801 		.word	32000000
 2570 00fc 0024F400 		.word	16000000
 2571              		.cfi_endproc
 2572              	.LFE48:
 2574              		.section	.text.HAL_UART_Init,"ax",%progbits
 2575              		.align	1
 2576              		.global	HAL_UART_Init
 2577              		.syntax unified
 2578              		.code	16
 2579              		.thumb_func
 2580              		.fpu softvfp
 2582              	HAL_UART_Init:
 2583              	.LVL204:
 2584              	.LFB49:
1241:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1242:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Initialize the UART mode according to the specified
1244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
1245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1248:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2585              		.loc 1 1249 1 is_stmt 1 view -0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 0
 2588              		@ frame_needed = 0, uses_anonymous_args = 0
1250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
1251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart == NULL)
 2589              		.loc 1 1251 3 view .LVU836
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2590              		.loc 1 1249 1 is_stmt 0 view .LVU837
 2591 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2592              	.LCFI9:
 2593              		.cfi_def_cfa_offset 24
 2594              		.cfi_offset 3, -24
 2595              		.cfi_offset 4, -20
 2596              		.cfi_offset 5, -16
 2597              		.cfi_offset 6, -12
 2598              		.cfi_offset 7, -8
 2599              		.cfi_offset 14, -4
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2600              		.loc 1 1249 1 view .LVU838
 2601 0002 041E     		subs	r4, r0, #0
 2602              		.loc 1 1251 5 view .LVU839
 2603 0004 01D1     		bne	.L259
 2604              	.LVL205:
 2605              	.L262:
1252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
 2606              		.loc 1 1253 12 view .LVU840
 2607 0006 0120     		movs	r0, #1
 2608              	.LVL206:
 2609              	.L260:
1254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1255:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
1257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
1260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
1265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1266:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
1268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
1271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init the low level hardware : GPIO, CLOCK */
1273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
1274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1275:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
1277:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Disable the Peripheral */
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
1280:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Set the UART Communication parameters */
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
1283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
1285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
1288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //UART_AdvFeatureConfig(huart);
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1291:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
1293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
1294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
1295:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR2_LINEN)
1296:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1297:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
1299:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1300:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_SCEN)
1301:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1303:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1305:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1306:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1307:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
1309:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
1311:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1312:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1313:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Enable the Peripheral */
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
1316:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return (UART_CheckIdleState(huart));
1319:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2610              		.loc 1 1319 1 view .LVU841
 2611              		@ sp needed
 2612 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2613              	.LVL207:
 2614              	.L259:
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2615              		.loc 1 1256 3 is_stmt 1 view .LVU842
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2616              		.loc 1 1264 5 view .LVU843
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2617              		.loc 1 1267 3 view .LVU844
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2618              		.loc 1 1267 11 is_stmt 0 view .LVU845
 2619 000a 0600     		movs	r6, r0
 2620 000c 6936     		adds	r6, r6, #105
 2621 000e 3378     		ldrb	r3, [r6]
 2622 0010 DAB2     		uxtb	r2, r3
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2623              		.loc 1 1267 5 view .LVU846
 2624 0012 002B     		cmp	r3, #0
 2625 0014 02D1     		bne	.L261
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2626              		.loc 1 1270 5 is_stmt 1 view .LVU847
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2627              		.loc 1 1270 17 is_stmt 0 view .LVU848
 2628 0016 0300     		movs	r3, r0
 2629 0018 6833     		adds	r3, r3, #104
 2630 001a 1A70     		strb	r2, [r3]
 2631              	.L261:
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2632              		.loc 1 1276 3 is_stmt 1 view .LVU849
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2633              		.loc 1 1276 17 is_stmt 0 view .LVU850
 2634 001c 2423     		movs	r3, #36
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2635              		.loc 1 1279 3 view .LVU851
 2636 001e 0127     		movs	r7, #1
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2637              		.loc 1 1276 17 view .LVU852
 2638 0020 3370     		strb	r3, [r6]
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2639              		.loc 1 1279 3 is_stmt 1 view .LVU853
 2640 0022 2568     		ldr	r5, [r4]
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2641              		.loc 1 1282 7 is_stmt 0 view .LVU854
 2642 0024 2000     		movs	r0, r4
 2643              	.LVL208:
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2644              		.loc 1 1279 3 view .LVU855
 2645 0026 2B68     		ldr	r3, [r5]
 2646 0028 BB43     		bics	r3, r7
 2647 002a 2B60     		str	r3, [r5]
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2648              		.loc 1 1282 3 is_stmt 1 view .LVU856
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2649              		.loc 1 1282 7 is_stmt 0 view .LVU857
 2650 002c FFF7FEFF 		bl	UART_SetConfig
 2651              	.LVL209:
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2652              		.loc 1 1282 6 view .LVU858
 2653 0030 B842     		cmp	r0, r7
 2654 0032 E8D0     		beq	.L262
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2655              		.loc 1 1287 3 is_stmt 1 view .LVU859
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2656              		.loc 1 1290 3 view .LVU860
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2657              		.loc 1 1298 3 view .LVU861
 2658 0034 6B68     		ldr	r3, [r5, #4]
 2659 0036 0A4A     		ldr	r2, .L266
 2660              	.LBB22:
 2661              	.LBB23:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2662              		.loc 1 1097 20 is_stmt 0 view .LVU862
 2663 0038 0020     		movs	r0, #0
 2664              	.LBE23:
 2665              	.LBE22:
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2666              		.loc 1 1298 3 view .LVU863
 2667 003a 1340     		ands	r3, r2
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2668              		.loc 1 1310 3 view .LVU864
 2669 003c 0822     		movs	r2, #8
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2670              		.loc 1 1298 3 view .LVU865
 2671 003e 6B60     		str	r3, [r5, #4]
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2672              		.loc 1 1310 3 is_stmt 1 view .LVU866
 2673 0040 AB68     		ldr	r3, [r5, #8]
 2674 0042 9343     		bics	r3, r2
 2675 0044 AB60     		str	r3, [r5, #8]
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2676              		.loc 1 1315 3 view .LVU867
 2677 0046 2B68     		ldr	r3, [r5]
 2678              	.LBB27:
 2679              	.LBB24:
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2680              		.loc 1 1134 18 is_stmt 0 view .LVU868
 2681 0048 2200     		movs	r2, r4
 2682              	.LBE24:
 2683              	.LBE27:
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2684              		.loc 1 1315 3 view .LVU869
 2685 004a 1F43     		orrs	r7, r3
 2686              	.LBB28:
 2687              	.LBB25:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2688              		.loc 1 1133 18 view .LVU870
 2689 004c 2023     		movs	r3, #32
 2690              	.LBE25:
 2691              	.LBE28:
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2692              		.loc 1 1315 3 view .LVU871
 2693 004e 2F60     		str	r7, [r5]
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2694              		.loc 1 1318 3 is_stmt 1 view .LVU872
 2695              	.LVL210:
 2696              	.LBB29:
 2697              	.LBI22:
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2698              		.loc 1 1090 19 view .LVU873
 2699              	.LBB26:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2700              		.loc 1 1097 3 view .LVU874
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2701              		.loc 1 1134 18 is_stmt 0 view .LVU875
 2702 0050 6A32     		adds	r2, r2, #106
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2703              		.loc 1 1097 20 view .LVU876
 2704 0052 E066     		str	r0, [r4, #108]
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2705              		.loc 1 1133 3 is_stmt 1 view .LVU877
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2706              		.loc 1 1137 3 is_stmt 0 view .LVU878
 2707 0054 6834     		adds	r4, r4, #104
 2708              	.LVL211:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2709              		.loc 1 1133 18 view .LVU879
 2710 0056 3370     		strb	r3, [r6]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2711              		.loc 1 1134 3 is_stmt 1 view .LVU880
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2712              		.loc 1 1134 18 is_stmt 0 view .LVU881
 2713 0058 1370     		strb	r3, [r2]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2714              		.loc 1 1137 3 is_stmt 1 view .LVU882
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2715              		.loc 1 1137 3 view .LVU883
 2716 005a 2070     		strb	r0, [r4]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2717              		.loc 1 1137 3 view .LVU884
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2718              		.loc 1 1139 3 view .LVU885
 2719              	.LVL212:
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2720              		.loc 1 1139 3 is_stmt 0 view .LVU886
 2721              	.LBE26:
 2722              	.LBE29:
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2723              		.loc 1 1318 11 view .LVU887
 2724 005c D4E7     		b	.L260
 2725              	.L267:
 2726 005e C046     		.align	2
 2727              	.L266:
 2728 0060 FFF7FFFF 		.word	-2049
 2729              		.cfi_endproc
 2730              	.LFE49:
 2732              		.section	.text.HAL_UART_Receive,"ax",%progbits
 2733              		.align	1
 2734              		.global	HAL_UART_Receive
 2735              		.syntax unified
 2736              		.code	16
 2737              		.thumb_func
 2738              		.fpu softvfp
 2740              	HAL_UART_Receive:
 2741              	.LVL213:
 2742              	.LFB50:
1320:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1321:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Receive an amount of data in blocking mode.
1323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: pointer to data buffer.
1325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: amount of data to be received.
1326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1328:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1333:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2743              		.loc 1 1334 1 is_stmt 1 view -0
 2744              		.cfi_startproc
 2745              		@ args = 0, pretend = 0, frame = 8
 2746              		@ frame_needed = 0, uses_anonymous_args = 0
1335:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2747              		.loc 1 1335 3 view .LVU889
1336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t uhMask;
 2748              		.loc 1 1336 3 view .LVU890
1337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0;
 2749              		.loc 1 1337 3 view .LVU891
1338:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 2750              		.loc 1 1340 3 view .LVU892
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2751              		.loc 1 1334 1 is_stmt 0 view .LVU893
 2752 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2753              	.LCFI10:
 2754              		.cfi_def_cfa_offset 20
 2755              		.cfi_offset 4, -20
 2756              		.cfi_offset 5, -16
 2757              		.cfi_offset 6, -12
 2758              		.cfi_offset 7, -8
 2759              		.cfi_offset 14, -4
 2760 0002 85B0     		sub	sp, sp, #20
 2761              	.LCFI11:
 2762              		.cfi_def_cfa_offset 40
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2763              		.loc 1 1334 1 view .LVU894
 2764 0004 0393     		str	r3, [sp, #12]
 2765              		.loc 1 1340 11 view .LVU895
 2766 0006 0300     		movs	r3, r0
 2767              	.LVL214:
 2768              		.loc 1 1340 11 view .LVU896
 2769 0008 6A33     		adds	r3, r3, #106
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2770              		.loc 1 1334 1 view .LVU897
 2771 000a 1700     		movs	r7, r2
 2772              		.loc 1 1340 11 view .LVU898
 2773 000c 1A78     		ldrb	r2, [r3]
 2774              	.LVL215:
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2775              		.loc 1 1334 1 view .LVU899
 2776 000e 0400     		movs	r4, r0
 2777 0010 0D00     		movs	r5, r1
1341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
1343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1346:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1348:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
1349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1351:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1357:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
1360:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
1366:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferSize = Size;
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
1369:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Computation of UART mask to apply to RDR register */
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     UART_MASK_COMPUTATION(huart);
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
1373:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* as long as data have to be received */
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
1376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->RxXferCount--;
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1379:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData ;
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
1387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1393:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
1396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1397:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
1399:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
1401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1403:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
 2778              		.loc 1 1404 12 view .LVU900
 2779 0012 0220     		movs	r0, #2
 2780              	.LVL216:
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2781              		.loc 1 1340 5 view .LVU901
 2782 0014 202A     		cmp	r2, #32
 2783 0016 39D1     		bne	.L269
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2784              		.loc 1 1342 5 is_stmt 1 view .LVU902
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 2785              		.loc 1 1344 15 is_stmt 0 view .LVU903
 2786 0018 0138     		subs	r0, r0, #1
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2787              		.loc 1 1342 7 view .LVU904
 2788 001a 0029     		cmp	r1, #0
 2789 001c 36D0     		beq	.L269
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2790              		.loc 1 1342 25 discriminator 1 view .LVU905
 2791 001e 002F     		cmp	r7, #0
 2792 0020 34D0     		beq	.L269
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2793              		.loc 1 1350 5 is_stmt 1 view .LVU906
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2794              		.loc 1 1350 8 is_stmt 0 view .LVU907
 2795 0022 8022     		movs	r2, #128
 2796 0024 A168     		ldr	r1, [r4, #8]
 2797              	.LVL217:
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2798              		.loc 1 1350 8 view .LVU908
 2799 0026 5201     		lsls	r2, r2, #5
 2800 0028 9142     		cmp	r1, r2
 2801 002a 04D1     		bne	.L270
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2802              		.loc 1 1350 56 discriminator 1 view .LVU909
 2803 002c 2269     		ldr	r2, [r4, #16]
 2804 002e 002A     		cmp	r2, #0
 2805 0030 01D1     		bne	.L270
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2806              		.loc 1 1352 7 is_stmt 1 view .LVU910
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2807              		.loc 1 1352 9 is_stmt 0 view .LVU911
 2808 0032 0542     		tst	r5, r0
 2809 0034 2AD1     		bne	.L269
 2810              	.L270:
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2811              		.loc 1 1359 5 is_stmt 1 view .LVU912
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2812              		.loc 1 1359 5 view .LVU913
 2813 0036 2200     		movs	r2, r4
 2814 0038 6832     		adds	r2, r2, #104
 2815 003a 1178     		ldrb	r1, [r2]
 2816              		.loc 1 1404 12 is_stmt 0 view .LVU914
 2817 003c 0220     		movs	r0, #2
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2818              		.loc 1 1359 5 view .LVU915
 2819 003e 0129     		cmp	r1, #1
 2820 0040 24D0     		beq	.L269
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2821              		.loc 1 1359 5 is_stmt 1 discriminator 2 view .LVU916
 2822 0042 0121     		movs	r1, #1
 2823 0044 1170     		strb	r1, [r2]
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2824              		.loc 1 1359 5 discriminator 2 view .LVU917
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2825              		.loc 1 1361 5 discriminator 2 view .LVU918
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2826              		.loc 1 1361 22 is_stmt 0 discriminator 2 view .LVU919
 2827 0046 0022     		movs	r2, #0
 2828 0048 E266     		str	r2, [r4, #108]
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2829              		.loc 1 1362 5 is_stmt 1 discriminator 2 view .LVU920
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2830              		.loc 1 1362 20 is_stmt 0 discriminator 2 view .LVU921
 2831 004a 2232     		adds	r2, r2, #34
 2832 004c 1A70     		strb	r2, [r3]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2833              		.loc 1 1365 5 is_stmt 1 discriminator 2 view .LVU922
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2834              		.loc 1 1365 17 is_stmt 0 discriminator 2 view .LVU923
 2835 004e FFF7FEFF 		bl	HAL_GetTick
 2836              	.LVL218:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2837              		.loc 1 1367 23 discriminator 2 view .LVU924
 2838 0052 2300     		movs	r3, r4
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2839              		.loc 1 1371 5 discriminator 2 view .LVU925
 2840 0054 8021     		movs	r1, #128
 2841 0056 A268     		ldr	r2, [r4, #8]
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2842              		.loc 1 1367 23 discriminator 2 view .LVU926
 2843 0058 5833     		adds	r3, r3, #88
 2844 005a 1F80     		strh	r7, [r3]
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2845              		.loc 1 1368 24 discriminator 2 view .LVU927
 2846 005c 5F80     		strh	r7, [r3, #2]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2847              		.loc 1 1365 17 discriminator 2 view .LVU928
 2848 005e 0600     		movs	r6, r0
 2849              	.LVL219:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2850              		.loc 1 1367 5 is_stmt 1 discriminator 2 view .LVU929
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2851              		.loc 1 1368 5 discriminator 2 view .LVU930
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2852              		.loc 1 1371 5 discriminator 2 view .LVU931
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2853              		.loc 1 1371 5 discriminator 2 view .LVU932
 2854 0060 4901     		lsls	r1, r1, #5
 2855 0062 0433     		adds	r3, r3, #4
 2856 0064 8A42     		cmp	r2, r1
 2857 0066 15D1     		bne	.L271
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2858              		.loc 1 1371 5 discriminator 1 view .LVU933
 2859 0068 2269     		ldr	r2, [r4, #16]
 2860 006a 002A     		cmp	r2, #0
 2861 006c 10D1     		bne	.L272
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2862              		.loc 1 1371 5 discriminator 3 view .LVU934
 2863 006e 1E4A     		ldr	r2, .L288
 2864              	.L287:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2865              		.loc 1 1371 5 is_stmt 0 discriminator 8 view .LVU935
 2866 0070 1A80     		strh	r2, [r3]
 2867              	.L273:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2868              		.loc 1 1371 5 is_stmt 1 discriminator 10 view .LVU936
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2869              		.loc 1 1372 5 discriminator 10 view .LVU937
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2870              		.loc 1 1372 12 is_stmt 0 discriminator 10 view .LVU938
 2871 0072 1F88     		ldrh	r7, [r3]
 2872              	.LVL220:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2873              		.loc 1 1375 5 is_stmt 1 discriminator 10 view .LVU939
 2874              	.L274:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2875              		.loc 1 1375 30 view .LVU940
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2876              		.loc 1 1375 16 is_stmt 0 view .LVU941
 2877 0074 2200     		movs	r2, r4
 2878 0076 5A32     		adds	r2, r2, #90
 2879 0078 1388     		ldrh	r3, [r2]
 2880 007a 98B2     		uxth	r0, r3
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2881              		.loc 1 1375 30 view .LVU942
 2882 007c 002B     		cmp	r3, #0
 2883 007e 10D1     		bne	.L277
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2884              		.loc 1 1395 5 is_stmt 1 view .LVU943
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2885              		.loc 1 1395 20 is_stmt 0 view .LVU944
 2886 0080 2300     		movs	r3, r4
 2887 0082 2022     		movs	r2, #32
 2888 0084 6A33     		adds	r3, r3, #106
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2889              		.loc 1 1398 5 view .LVU945
 2890 0086 6834     		adds	r4, r4, #104
 2891              	.LVL221:
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2892              		.loc 1 1395 20 view .LVU946
 2893 0088 1A70     		strb	r2, [r3]
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2894              		.loc 1 1398 5 is_stmt 1 view .LVU947
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2895              		.loc 1 1398 5 view .LVU948
 2896 008a 2070     		strb	r0, [r4]
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2897              		.loc 1 1398 5 view .LVU949
1400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2898              		.loc 1 1400 5 view .LVU950
 2899              	.LVL222:
 2900              	.L269:
1405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1406:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2901              		.loc 1 1406 1 is_stmt 0 view .LVU951
 2902 008c 05B0     		add	sp, sp, #20
 2903              		@ sp needed
 2904              	.LVL223:
 2905              		.loc 1 1406 1 view .LVU952
 2906 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 2907              	.LVL224:
 2908              	.L272:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2909              		.loc 1 1371 5 is_stmt 1 discriminator 4 view .LVU953
 2910 0090 FF22     		movs	r2, #255
 2911 0092 EDE7     		b	.L287
 2912              	.L271:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2913              		.loc 1 1371 5 discriminator 2 view .LVU954
 2914 0094 002A     		cmp	r2, #0
 2915 0096 ECD1     		bne	.L273
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2916              		.loc 1 1371 5 discriminator 5 view .LVU955
 2917 0098 2269     		ldr	r2, [r4, #16]
 2918 009a 002A     		cmp	r2, #0
 2919 009c F8D0     		beq	.L272
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2920              		.loc 1 1371 5 discriminator 8 view .LVU956
 2921 009e 7F22     		movs	r2, #127
 2922 00a0 E6E7     		b	.L287
 2923              	.LVL225:
 2924              	.L277:
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2925              		.loc 1 1377 7 view .LVU957
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2926              		.loc 1 1377 12 is_stmt 0 view .LVU958
 2927 00a2 1388     		ldrh	r3, [r2]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2928              		.loc 1 1378 10 view .LVU959
 2929 00a4 2021     		movs	r1, #32
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2930              		.loc 1 1377 25 view .LVU960
 2931 00a6 013B     		subs	r3, r3, #1
 2932 00a8 9BB2     		uxth	r3, r3
 2933 00aa 1380     		strh	r3, [r2]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2934              		.loc 1 1378 7 is_stmt 1 view .LVU961
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2935              		.loc 1 1378 10 is_stmt 0 view .LVU962
 2936 00ac 039B     		ldr	r3, [sp, #12]
 2937 00ae 0022     		movs	r2, #0
 2938 00b0 0093     		str	r3, [sp]
 2939 00b2 2000     		movs	r0, r4
 2940 00b4 3300     		movs	r3, r6
 2941 00b6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2942              	.LVL226:
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2943              		.loc 1 1378 9 view .LVU963
 2944 00ba 0028     		cmp	r0, #0
 2945 00bc 12D1     		bne	.L283
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2946              		.loc 1 1382 7 is_stmt 1 view .LVU964
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2947              		.loc 1 1382 10 is_stmt 0 view .LVU965
 2948 00be 8021     		movs	r1, #128
 2949 00c0 A268     		ldr	r2, [r4, #8]
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2950              		.loc 1 1385 32 view .LVU966
 2951 00c2 2368     		ldr	r3, [r4]
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2952              		.loc 1 1382 10 view .LVU967
 2953 00c4 4901     		lsls	r1, r1, #5
 2954 00c6 8A42     		cmp	r2, r1
 2955 00c8 07D1     		bne	.L275
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2956              		.loc 1 1382 58 discriminator 1 view .LVU968
 2957 00ca 2269     		ldr	r2, [r4, #16]
 2958 00cc 002A     		cmp	r2, #0
 2959 00ce 04D1     		bne	.L275
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 2960              		.loc 1 1384 9 is_stmt 1 view .LVU969
 2961              	.LVL227:
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2962              		.loc 1 1385 9 view .LVU970
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2963              		.loc 1 1385 42 is_stmt 0 view .LVU971
 2964 00d0 9B8C     		ldrh	r3, [r3, #36]
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2965              		.loc 1 1385 16 view .LVU972
 2966 00d2 3B40     		ands	r3, r7
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2967              		.loc 1 1385 14 view .LVU973
 2968 00d4 2B80     		strh	r3, [r5]
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2969              		.loc 1 1386 9 is_stmt 1 view .LVU974
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2970              		.loc 1 1386 15 is_stmt 0 view .LVU975
 2971 00d6 0235     		adds	r5, r5, #2
 2972              	.LVL228:
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2973              		.loc 1 1386 15 view .LVU976
 2974 00d8 CCE7     		b	.L274
 2975              	.LVL229:
 2976              	.L275:
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2977              		.loc 1 1390 9 is_stmt 1 view .LVU977
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2978              		.loc 1 1390 45 is_stmt 0 view .LVU978
 2979 00da 9B8C     		ldrh	r3, [r3, #36]
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2980              		.loc 1 1390 20 view .LVU979
 2981 00dc 3B40     		ands	r3, r7
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2982              		.loc 1 1390 18 view .LVU980
 2983 00de 2B70     		strb	r3, [r5]
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2984              		.loc 1 1390 15 view .LVU981
 2985 00e0 0135     		adds	r5, r5, #1
 2986              	.LVL230:
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2987              		.loc 1 1390 15 view .LVU982
 2988 00e2 C7E7     		b	.L274
 2989              	.L283:
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2990              		.loc 1 1380 16 view .LVU983
 2991 00e4 0320     		movs	r0, #3
 2992 00e6 D1E7     		b	.L269
 2993              	.L289:
 2994              		.align	2
 2995              	.L288:
 2996 00e8 FF010000 		.word	511
 2997              		.cfi_endproc
 2998              	.LFE50:
 3000              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3001              		.align	1
 3002              		.global	HAL_UART_Transmit
 3003              		.syntax unified
 3004              		.code	16
 3005              		.thumb_func
 3006              		.fpu softvfp
 3008              	HAL_UART_Transmit:
 3009              	.LVL231:
 3010              	.LFB51:
1407:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1408:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Send an amount of data in blocking mode.
1410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: Pointer to data buffer.
1412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: Amount of data to be sent.
1413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3011              		.loc 1 1421 1 is_stmt 1 view -0
 3012              		.cfi_startproc
 3013              		@ args = 0, pretend = 0, frame = 8
 3014              		@ frame_needed = 0, uses_anonymous_args = 0
1422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3015              		.loc 1 1422 3 view .LVU985
1423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3016              		.loc 1 1423 3 view .LVU986
1424:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 3017              		.loc 1 1426 3 view .LVU987
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3018              		.loc 1 1421 1 is_stmt 0 view .LVU988
 3019 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3020              	.LCFI12:
 3021              		.cfi_def_cfa_offset 20
 3022              		.cfi_offset 4, -20
 3023              		.cfi_offset 5, -16
 3024              		.cfi_offset 6, -12
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 85B0     		sub	sp, sp, #20
 3028              	.LCFI13:
 3029              		.cfi_def_cfa_offset 40
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3030              		.loc 1 1421 1 view .LVU989
 3031 0004 0393     		str	r3, [sp, #12]
 3032              		.loc 1 1426 11 view .LVU990
 3033 0006 0300     		movs	r3, r0
 3034              	.LVL232:
 3035              		.loc 1 1426 11 view .LVU991
 3036 0008 6933     		adds	r3, r3, #105
 3037 000a 0293     		str	r3, [sp, #8]
 3038 000c 1B78     		ldrb	r3, [r3]
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3039              		.loc 1 1421 1 view .LVU992
 3040 000e 0400     		movs	r4, r0
 3041 0010 0D00     		movs	r5, r1
 3042 0012 1600     		movs	r6, r2
1427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
1429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1432:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
1435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1437:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1443:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
1446:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1449:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
1452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferSize = Size;
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
1456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->TxXferCount--;
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
1467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_TIMEOUT;
1476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1477:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_READY;
1480:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
1483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
1485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
 3043              		.loc 1 1488 12 view .LVU993
 3044 0014 0220     		movs	r0, #2
 3045              	.LVL233:
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3046              		.loc 1 1426 5 view .LVU994
 3047 0016 202B     		cmp	r3, #32
 3048 0018 48D1     		bne	.L291
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3049              		.loc 1 1428 5 is_stmt 1 view .LVU995
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 3050              		.loc 1 1430 15 is_stmt 0 view .LVU996
 3051 001a 0138     		subs	r0, r0, #1
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3052              		.loc 1 1428 7 view .LVU997
 3053 001c 0029     		cmp	r1, #0
 3054 001e 45D0     		beq	.L291
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3055              		.loc 1 1428 25 discriminator 1 view .LVU998
 3056 0020 002A     		cmp	r2, #0
 3057 0022 43D0     		beq	.L291
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3058              		.loc 1 1436 5 is_stmt 1 view .LVU999
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3059              		.loc 1 1436 8 is_stmt 0 view .LVU1000
 3060 0024 8023     		movs	r3, #128
 3061 0026 A268     		ldr	r2, [r4, #8]
 3062              	.LVL234:
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3063              		.loc 1 1436 8 view .LVU1001
 3064 0028 5B01     		lsls	r3, r3, #5
 3065 002a 9A42     		cmp	r2, r3
 3066 002c 04D1     		bne	.L292
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3067              		.loc 1 1436 56 discriminator 1 view .LVU1002
 3068 002e 2369     		ldr	r3, [r4, #16]
 3069 0030 002B     		cmp	r3, #0
 3070 0032 01D1     		bne	.L292
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3071              		.loc 1 1438 7 is_stmt 1 view .LVU1003
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3072              		.loc 1 1438 9 is_stmt 0 view .LVU1004
 3073 0034 0142     		tst	r1, r0
 3074 0036 39D1     		bne	.L291
 3075              	.L292:
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3076              		.loc 1 1445 5 is_stmt 1 view .LVU1005
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3077              		.loc 1 1445 5 view .LVU1006
 3078 0038 2300     		movs	r3, r4
 3079 003a 6833     		adds	r3, r3, #104
 3080 003c 1A78     		ldrb	r2, [r3]
 3081              		.loc 1 1488 12 is_stmt 0 view .LVU1007
 3082 003e 0220     		movs	r0, #2
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3083              		.loc 1 1445 5 view .LVU1008
 3084 0040 012A     		cmp	r2, #1
 3085 0042 33D0     		beq	.L291
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3086              		.loc 1 1445 5 is_stmt 1 discriminator 2 view .LVU1009
 3087 0044 0122     		movs	r2, #1
 3088 0046 1A70     		strb	r2, [r3]
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3089              		.loc 1 1445 5 discriminator 2 view .LVU1010
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3090              		.loc 1 1447 5 discriminator 2 view .LVU1011
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3091              		.loc 1 1447 22 is_stmt 0 discriminator 2 view .LVU1012
 3092 0048 0023     		movs	r3, #0
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3093              		.loc 1 1448 19 discriminator 2 view .LVU1013
 3094 004a 029A     		ldr	r2, [sp, #8]
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3095              		.loc 1 1447 22 discriminator 2 view .LVU1014
 3096 004c E366     		str	r3, [r4, #108]
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3097              		.loc 1 1448 5 is_stmt 1 discriminator 2 view .LVU1015
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3098              		.loc 1 1448 19 is_stmt 0 discriminator 2 view .LVU1016
 3099 004e 2133     		adds	r3, r3, #33
 3100 0050 1370     		strb	r3, [r2]
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3101              		.loc 1 1451 5 is_stmt 1 discriminator 2 view .LVU1017
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3102              		.loc 1 1451 17 is_stmt 0 discriminator 2 view .LVU1018
 3103 0052 FFF7FEFF 		bl	HAL_GetTick
 3104              	.LVL235:
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3105              		.loc 1 1453 23 discriminator 2 view .LVU1019
 3106 0056 2300     		movs	r3, r4
 3107 0058 5033     		adds	r3, r3, #80
 3108 005a 1E80     		strh	r6, [r3]
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
 3109              		.loc 1 1454 24 discriminator 2 view .LVU1020
 3110 005c 5E80     		strh	r6, [r3, #2]
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3111              		.loc 1 1462 10 discriminator 2 view .LVU1021
 3112 005e 8026     		movs	r6, #128
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3113              		.loc 1 1451 17 discriminator 2 view .LVU1022
 3114 0060 0700     		movs	r7, r0
 3115              	.LVL236:
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3116              		.loc 1 1453 5 is_stmt 1 discriminator 2 view .LVU1023
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
 3117              		.loc 1 1454 5 discriminator 2 view .LVU1024
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3118              		.loc 1 1455 5 discriminator 2 view .LVU1025
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3119              		.loc 1 1462 10 is_stmt 0 discriminator 2 view .LVU1026
 3120 0062 7601     		lsls	r6, r6, #5
 3121              	.LVL237:
 3122              	.L293:
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3123              		.loc 1 1455 30 is_stmt 1 view .LVU1027
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3124              		.loc 1 1455 16 is_stmt 0 view .LVU1028
 3125 0064 2100     		movs	r1, r4
 3126 0066 5231     		adds	r1, r1, #82
 3127 0068 0B88     		ldrh	r3, [r1]
 3128 006a 9AB2     		uxth	r2, r3
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3129              		.loc 1 1455 30 view .LVU1029
 3130 006c 002B     		cmp	r3, #0
 3131 006e 0ED1     		bne	.L297
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3132              		.loc 1 1473 5 is_stmt 1 view .LVU1030
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3133              		.loc 1 1473 8 is_stmt 0 view .LVU1031
 3134 0070 039B     		ldr	r3, [sp, #12]
 3135 0072 4021     		movs	r1, #64
 3136 0074 0093     		str	r3, [sp]
 3137 0076 2000     		movs	r0, r4
 3138 0078 3B00     		movs	r3, r7
 3139 007a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3140              	.LVL238:
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3141              		.loc 1 1473 7 view .LVU1032
 3142 007e 0028     		cmp	r0, #0
 3143 0080 13D1     		bne	.L298
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3144              		.loc 1 1479 5 is_stmt 1 view .LVU1033
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3145              		.loc 1 1479 19 is_stmt 0 view .LVU1034
 3146 0082 2023     		movs	r3, #32
 3147 0084 029A     		ldr	r2, [sp, #8]
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3148              		.loc 1 1482 5 view .LVU1035
 3149 0086 6834     		adds	r4, r4, #104
 3150              	.LVL239:
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3151              		.loc 1 1479 19 view .LVU1036
 3152 0088 1370     		strb	r3, [r2]
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3153              		.loc 1 1482 5 is_stmt 1 view .LVU1037
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3154              		.loc 1 1482 5 view .LVU1038
 3155 008a 2070     		strb	r0, [r4]
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3156              		.loc 1 1482 5 view .LVU1039
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3157              		.loc 1 1484 5 view .LVU1040
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3158              		.loc 1 1484 12 is_stmt 0 view .LVU1041
 3159 008c 0EE0     		b	.L291
 3160              	.LVL240:
 3161              	.L297:
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3162              		.loc 1 1457 7 is_stmt 1 view .LVU1042
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3163              		.loc 1 1457 12 is_stmt 0 view .LVU1043
 3164 008e 0B88     		ldrh	r3, [r1]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3165              		.loc 1 1458 10 view .LVU1044
 3166 0090 0022     		movs	r2, #0
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3167              		.loc 1 1457 25 view .LVU1045
 3168 0092 013B     		subs	r3, r3, #1
 3169 0094 9BB2     		uxth	r3, r3
 3170 0096 0B80     		strh	r3, [r1]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3171              		.loc 1 1458 7 is_stmt 1 view .LVU1046
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3172              		.loc 1 1458 10 is_stmt 0 view .LVU1047
 3173 0098 039B     		ldr	r3, [sp, #12]
 3174 009a 8021     		movs	r1, #128
 3175 009c 0093     		str	r3, [sp]
 3176 009e 2000     		movs	r0, r4
 3177 00a0 3B00     		movs	r3, r7
 3178 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3179              	.LVL241:
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3180              		.loc 1 1458 9 view .LVU1048
 3181 00a6 0028     		cmp	r0, #0
 3182 00a8 02D0     		beq	.L294
 3183              	.L298:
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3184              		.loc 1 1460 16 view .LVU1049
 3185 00aa 0320     		movs	r0, #3
 3186              	.LVL242:
 3187              	.L291:
1489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1490:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3188              		.loc 1 1490 1 view .LVU1050
 3189 00ac 05B0     		add	sp, sp, #20
 3190              		@ sp needed
 3191              	.LVL243:
 3192              		.loc 1 1490 1 view .LVU1051
 3193 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 3194              	.LVL244:
 3195              	.L294:
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3196              		.loc 1 1462 7 is_stmt 1 view .LVU1052
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3197              		.loc 1 1462 10 is_stmt 0 view .LVU1053
 3198 00b0 A368     		ldr	r3, [r4, #8]
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3199              		.loc 1 1465 14 view .LVU1054
 3200 00b2 2268     		ldr	r2, [r4]
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3201              		.loc 1 1462 10 view .LVU1055
 3202 00b4 B342     		cmp	r3, r6
 3203 00b6 08D1     		bne	.L295
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3204              		.loc 1 1462 58 discriminator 1 view .LVU1056
 3205 00b8 2369     		ldr	r3, [r4, #16]
 3206 00ba 002B     		cmp	r3, #0
 3207 00bc 05D1     		bne	.L295
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3208              		.loc 1 1464 9 is_stmt 1 view .LVU1057
 3209              	.LVL245:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3210              		.loc 1 1465 9 view .LVU1058
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3211              		.loc 1 1465 38 is_stmt 0 view .LVU1059
 3212 00be 2B88     		ldrh	r3, [r5]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3213              		.loc 1 1466 15 view .LVU1060
 3214 00c0 0235     		adds	r5, r5, #2
 3215              	.LVL246:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3216              		.loc 1 1465 38 view .LVU1061
 3217 00c2 DB05     		lsls	r3, r3, #23
 3218 00c4 DB0D     		lsrs	r3, r3, #23
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3219              		.loc 1 1465 30 view .LVU1062
 3220 00c6 1385     		strh	r3, [r2, #40]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3221              		.loc 1 1466 9 is_stmt 1 view .LVU1063
 3222              	.LVL247:
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3223              		.loc 1 1466 15 is_stmt 0 view .LVU1064
 3224 00c8 CCE7     		b	.L293
 3225              	.LVL248:
 3226              	.L295:
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3227              		.loc 1 1470 9 is_stmt 1 view .LVU1065
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3228              		.loc 1 1470 33 is_stmt 0 view .LVU1066
 3229 00ca 2B78     		ldrb	r3, [r5]
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3230              		.loc 1 1470 39 view .LVU1067
 3231 00cc 0135     		adds	r5, r5, #1
 3232              	.LVL249:
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3233              		.loc 1 1470 30 view .LVU1068
 3234 00ce 1385     		strh	r3, [r2, #40]
 3235 00d0 C8E7     		b	.L293
 3236              		.cfi_endproc
 3237              	.LFE51:
 3239              		.global	SystemCoreClock
 3240              		.section	.rodata
 3241              		.set	.LANCHOR2,. + 0
 3244              	CSWTCH.25:
 3245 0000 04       		.byte	4
 3246 0001 08       		.byte	8
 3247 0002 02       		.byte	2
 3248              		.data
 3249              		.align	2
 3250              		.set	.LANCHOR1,. + 0
 3253              	SystemCoreClock:
 3254 0000 00127A00 		.word	8000000
 3255              		.bss
 3256              		.align	2
 3257              		.set	.LANCHOR0,. + 0
 3260              	tick.0:
 3261 0000 00000000 		.space	4
 3262              		.text
 3263              	.Letext0:
 3264              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3265              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3266              		.file 4 ".././hal/stm32f0/CMSIS/device/stm32f030x6.h"
 3267              		.file 5 ".././hal/stm32f0/CMSIS/device/stm32f0xx.h"
 3268              		.file 6 ".././hal/stm32f0/stm32f0xx_hal_def.h"
 3269              		.file 7 ".././hal/stm32f0/stm32f0xx_hal_rcc.h"
 3270              		.file 8 ".././hal/stm32f0/stm32f0xx_hal_rcc_ex.h"
 3271              		.file 9 ".././hal/stm32f0/stm32f0xx_hal_gpio.h"
 3272              		.file 10 ".././hal/stm32f0/stm32f0xx_hal_dma.h"
 3273              		.file 11 ".././hal/stm32f0/stm32f0xx_hal_uart.h"
 3274              		.file 12 ".././hal/stm32f0/CMSIS/device/system_stm32f0xx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0_hal_lowlevel.c
     /tmp/cc2dIIXb.s:16     .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc2dIIXb.s:24     .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc2dIIXb.s:48     .text.HAL_GetTick:000000000000000c $d
     /tmp/cc2dIIXb.s:53     .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cc2dIIXb.s:60     .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cc2dIIXb.s:78     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cc2dIIXb.s:85     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cc2dIIXb.s:99     .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/cc2dIIXb.s:106    .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/cc2dIIXb.s:120    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cc2dIIXb.s:127    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cc2dIIXb.s:896    .text.HAL_RCC_OscConfig:0000000000000300 $d
     /tmp/cc2dIIXb.s:906    .text.HAL_RCC_OscConfig:0000000000000318 $t
     /tmp/cc2dIIXb.s:1058   .text.HAL_RCC_OscConfig:00000000000003b4 $d
     /tmp/cc2dIIXb.s:1065   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cc2dIIXb.s:1072   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cc2dIIXb.s:1351   .text.HAL_RCC_ClockConfig:0000000000000100 $d
     /tmp/cc2dIIXb.s:1360   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/cc2dIIXb.s:1367   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/cc2dIIXb.s:1634   .text.HAL_RCCEx_PeriphCLKConfig:00000000000000f4 $d
     /tmp/cc2dIIXb.s:1645   .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/cc2dIIXb.s:1652   .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/cc2dIIXb.s:2057   .text.HAL_GPIO_Init:000000000000014c $d
     /tmp/cc2dIIXb.s:2067   .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/cc2dIIXb.s:2074   .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/cc2dIIXb.s:2105   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc2dIIXb.s:2112   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc2dIIXb.s:2224   .text.UART_WaitOnFlagUntilTimeout:0000000000000060 $d
     /tmp/cc2dIIXb.s:2229   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc2dIIXb.s:2236   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc2dIIXb.s:2280   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc2dIIXb.s:2287   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc2dIIXb.s:2394   .text.UART_SetConfig:000000000000005c $d
     /tmp/cc2dIIXb.s:2478   .text.UART_SetConfig:000000000000009e $d
     /tmp/cc2dIIXb.s:2564   .text.UART_SetConfig:00000000000000e4 $d
     /tmp/cc2dIIXb.s:2575   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc2dIIXb.s:2582   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc2dIIXb.s:2728   .text.HAL_UART_Init:0000000000000060 $d
     /tmp/cc2dIIXb.s:2733   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc2dIIXb.s:2740   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc2dIIXb.s:2996   .text.HAL_UART_Receive:00000000000000e8 $d
     /tmp/cc2dIIXb.s:3001   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc2dIIXb.s:3008   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc2dIIXb.s:3253   .data:0000000000000000 SystemCoreClock
     /tmp/cc2dIIXb.s:3244   .rodata:0000000000000000 CSWTCH.25
     /tmp/cc2dIIXb.s:3249   .data:0000000000000000 $d
     /tmp/cc2dIIXb.s:3256   .bss:0000000000000000 $d
     /tmp/cc2dIIXb.s:3260   .bss:0000000000000000 tick.0
     /tmp/cc2dIIXb.s:2403   .text.UART_SetConfig:0000000000000065 $d
     /tmp/cc2dIIXb.s:2403   .text.UART_SetConfig:0000000000000066 $t
     /tmp/cc2dIIXb.s:2487   .text.UART_SetConfig:00000000000000a7 $d
     /tmp/cc2dIIXb.s:2487   .text.UART_SetConfig:00000000000000a8 $t

UNDEFINED SYMBOLS
__aeabi_uidiv
__gnu_thumb1_case_uqi
